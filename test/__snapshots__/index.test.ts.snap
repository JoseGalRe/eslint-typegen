// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`flatConfigsToRuleOptions 1`] = `
"/* eslint-disable */
/* prettier-ignore */
import type { Linter } from 'eslint'

export interface RuleOptions {
  /**
   * Enforce linebreaks after opening and before closing array brackets in \`<template>\`
   * @see https://eslint.vuejs.org/rules/array-bracket-newline.html
   */
  'vue/array-bracket-newline'?: Linter.RuleEntry<VueArrayBracketNewline>
  /**
   * Enforce consistent spacing inside array brackets in \`<template>\`
   * @see https://eslint.vuejs.org/rules/array-bracket-spacing.html
   */
  'vue/array-bracket-spacing'?: Linter.RuleEntry<VueArrayBracketSpacing>
  /**
   * Enforce line breaks after each array element in \`<template>\`
   * @see https://eslint.vuejs.org/rules/array-element-newline.html
   */
  'vue/array-element-newline'?: Linter.RuleEntry<VueArrayElementNewline>
  /**
   * Enforce consistent spacing before and after the arrow in arrow functions in \`<template>\`
   * @see https://eslint.vuejs.org/rules/arrow-spacing.html
   */
  'vue/arrow-spacing'?: Linter.RuleEntry<VueArrowSpacing>
  /**
   * enforce attribute naming style on custom components in template
   * @see https://eslint.vuejs.org/rules/attribute-hyphenation.html
   */
  'vue/attribute-hyphenation'?: Linter.RuleEntry<VueAttributeHyphenation>
  /**
   * enforce order of attributes
   * @see https://eslint.vuejs.org/rules/attributes-order.html
   */
  'vue/attributes-order'?: Linter.RuleEntry<VueAttributesOrder>
  /**
   * disallow use other than available \`lang\`
   * @see https://eslint.vuejs.org/rules/block-lang.html
   */
  'vue/block-lang'?: Linter.RuleEntry<VueBlockLang>
  /**
   * enforce order of component top-level elements
   * @see https://eslint.vuejs.org/rules/block-order.html
   */
  'vue/block-order'?: Linter.RuleEntry<VueBlockOrder>
  /**
   * Disallow or enforce spaces inside of blocks after opening block and before closing block in \`<template>\`
   * @see https://eslint.vuejs.org/rules/block-spacing.html
   */
  'vue/block-spacing'?: Linter.RuleEntry<VueBlockSpacing>
  /**
   * enforce line breaks after opening and before closing block-level tags
   * @see https://eslint.vuejs.org/rules/block-tag-newline.html
   */
  'vue/block-tag-newline'?: Linter.RuleEntry<VueBlockTagNewline>
  /**
   * Enforce consistent brace style for blocks in \`<template>\`
   * @see https://eslint.vuejs.org/rules/brace-style.html
   */
  'vue/brace-style'?: Linter.RuleEntry<VueBraceStyle>
  /**
   * Enforce camelcase naming convention in \`<template>\`
   * @see https://eslint.vuejs.org/rules/camelcase.html
   */
  'vue/camelcase'?: Linter.RuleEntry<VueCamelcase>
  /**
   * Require or disallow trailing commas in \`<template>\`
   * @see https://eslint.vuejs.org/rules/comma-dangle.html
   */
  'vue/comma-dangle'?: Linter.RuleEntry<VueCommaDangle>
  /**
   * Enforce consistent spacing before and after commas in \`<template>\`
   * @see https://eslint.vuejs.org/rules/comma-spacing.html
   */
  'vue/comma-spacing'?: Linter.RuleEntry<VueCommaSpacing>
  /**
   * Enforce consistent comma style in \`<template>\`
   * @see https://eslint.vuejs.org/rules/comma-style.html
   */
  'vue/comma-style'?: Linter.RuleEntry<VueCommaStyle>
  /**
   * support comment-directives in \`<template>\`
   * @see https://eslint.vuejs.org/rules/comment-directive.html
   */
  'vue/comment-directive'?: Linter.RuleEntry<VueCommentDirective>
  /**
   * enforce component API style
   * @see https://eslint.vuejs.org/rules/component-api-style.html
   */
  'vue/component-api-style'?: Linter.RuleEntry<VueComponentApiStyle>
  /**
   * enforce specific casing for component definition name
   * @see https://eslint.vuejs.org/rules/component-definition-name-casing.html
   */
  'vue/component-definition-name-casing'?: Linter.RuleEntry<VueComponentDefinitionNameCasing>
  /**
   * enforce specific casing for the component naming style in template
   * @see https://eslint.vuejs.org/rules/component-name-in-template-casing.html
   */
  'vue/component-name-in-template-casing'?: Linter.RuleEntry<VueComponentNameInTemplateCasing>
  /**
   * enforce the casing of component name in \`components\` options
   * @see https://eslint.vuejs.org/rules/component-options-name-casing.html
   */
  'vue/component-options-name-casing'?: Linter.RuleEntry<VueComponentOptionsNameCasing>
  /**
   * enforce order of component top-level elements
   * @see https://eslint.vuejs.org/rules/component-tags-order.html
   * @deprecated
   */
  'vue/component-tags-order'?: Linter.RuleEntry<VueComponentTagsOrder>
  /**
   * enforce specific casing for custom event name
   * @see https://eslint.vuejs.org/rules/custom-event-name-casing.html
   */
  'vue/custom-event-name-casing'?: Linter.RuleEntry<VueCustomEventNameCasing>
  /**
   * enforce declaration style of \`defineEmits\`
   * @see https://eslint.vuejs.org/rules/define-emits-declaration.html
   */
  'vue/define-emits-declaration'?: Linter.RuleEntry<VueDefineEmitsDeclaration>
  /**
   * enforce order of \`defineEmits\` and \`defineProps\` compiler macros
   * @see https://eslint.vuejs.org/rules/define-macros-order.html
   */
  'vue/define-macros-order'?: Linter.RuleEntry<VueDefineMacrosOrder>
  /**
   * enforce declaration style of \`defineProps\`
   * @see https://eslint.vuejs.org/rules/define-props-declaration.html
   */
  'vue/define-props-declaration'?: Linter.RuleEntry<VueDefinePropsDeclaration>
  /**
   * Enforce consistent newlines before and after dots in \`<template>\`
   * @see https://eslint.vuejs.org/rules/dot-location.html
   */
  'vue/dot-location'?: Linter.RuleEntry<VueDotLocation>
  /**
   * Enforce dot notation whenever possible in \`<template>\`
   * @see https://eslint.vuejs.org/rules/dot-notation.html
   */
  'vue/dot-notation'?: Linter.RuleEntry<VueDotNotation>
  /**
   * enforce or forbid the use of the \`scoped\` and \`module\` attributes in SFC top level style tags
   * @see https://eslint.vuejs.org/rules/enforce-style-attribute.html
   */
  'vue/enforce-style-attribute'?: Linter.RuleEntry<VueEnforceStyleAttribute>
  /**
   * Require the use of \`===\` and \`!==\` in \`<template>\`
   * @see https://eslint.vuejs.org/rules/eqeqeq.html
   */
  'vue/eqeqeq'?: Linter.RuleEntry<VueEqeqeq>
  /**
   * enforce the location of first attribute
   * @see https://eslint.vuejs.org/rules/first-attribute-linebreak.html
   */
  'vue/first-attribute-linebreak'?: Linter.RuleEntry<VueFirstAttributeLinebreak>
  /**
   * Require or disallow spacing between function identifiers and their invocations in \`<template>\`
   * @see https://eslint.vuejs.org/rules/func-call-spacing.html
   */
  'vue/func-call-spacing'?: Linter.RuleEntry<VueFuncCallSpacing>
  /**
   * disallow usage of button without an explicit type attribute
   * @see https://eslint.vuejs.org/rules/html-button-has-type.html
   */
  'vue/html-button-has-type'?: Linter.RuleEntry<VueHtmlButtonHasType>
  /**
   * require or disallow a line break before tag's closing brackets
   * @see https://eslint.vuejs.org/rules/html-closing-bracket-newline.html
   */
  'vue/html-closing-bracket-newline'?: Linter.RuleEntry<VueHtmlClosingBracketNewline>
  /**
   * require or disallow a space before tag's closing brackets
   * @see https://eslint.vuejs.org/rules/html-closing-bracket-spacing.html
   */
  'vue/html-closing-bracket-spacing'?: Linter.RuleEntry<VueHtmlClosingBracketSpacing>
  /**
   * enforce unified line brake in HTML comments
   * @see https://eslint.vuejs.org/rules/html-comment-content-newline.html
   */
  'vue/html-comment-content-newline'?: Linter.RuleEntry<VueHtmlCommentContentNewline>
  /**
   * enforce unified spacing in HTML comments
   * @see https://eslint.vuejs.org/rules/html-comment-content-spacing.html
   */
  'vue/html-comment-content-spacing'?: Linter.RuleEntry<VueHtmlCommentContentSpacing>
  /**
   * enforce consistent indentation in HTML comments
   * @see https://eslint.vuejs.org/rules/html-comment-indent.html
   */
  'vue/html-comment-indent'?: Linter.RuleEntry<VueHtmlCommentIndent>
  'vue/html-end-tags'?: Linter.RuleEntry<[]>
  /**
   * enforce consistent indentation in \`<template>\`
   * @see https://eslint.vuejs.org/rules/html-indent.html
   */
  'vue/html-indent'?: Linter.RuleEntry<VueHtmlIndent>
  /**
   * enforce quotes style of HTML attributes
   * @see https://eslint.vuejs.org/rules/html-quotes.html
   */
  'vue/html-quotes'?: Linter.RuleEntry<VueHtmlQuotes>
  /**
   * enforce self-closing style
   * @see https://eslint.vuejs.org/rules/html-self-closing.html
   */
  'vue/html-self-closing'?: Linter.RuleEntry<VueHtmlSelfClosing>
  'vue/jsx-uses-vars'?: Linter.RuleEntry<[]>
  /**
   * Enforce consistent spacing between keys and values in object literal properties in \`<template>\`
   * @see https://eslint.vuejs.org/rules/key-spacing.html
   */
  'vue/key-spacing'?: Linter.RuleEntry<VueKeySpacing>
  /**
   * Enforce consistent spacing before and after keywords in \`<template>\`
   * @see https://eslint.vuejs.org/rules/keyword-spacing.html
   */
  'vue/keyword-spacing'?: Linter.RuleEntry<VueKeywordSpacing>
  /**
   * require component name property to match its file name
   * @see https://eslint.vuejs.org/rules/match-component-file-name.html
   */
  'vue/match-component-file-name'?: Linter.RuleEntry<VueMatchComponentFileName>
  'vue/match-component-import-name'?: Linter.RuleEntry<[]>
  /**
   * enforce the maximum number of attributes per line
   * @see https://eslint.vuejs.org/rules/max-attributes-per-line.html
   */
  'vue/max-attributes-per-line'?: Linter.RuleEntry<VueMaxAttributesPerLine>
  /**
   * enforce a maximum line length in \`.vue\` files
   * @see https://eslint.vuejs.org/rules/max-len.html
   */
  'vue/max-len'?: Linter.RuleEntry<VueMaxLen>
  /**
   * enforce maximum number of lines in Vue SFC blocks
   * @see https://eslint.vuejs.org/rules/max-lines-per-block.html
   */
  'vue/max-lines-per-block'?: Linter.RuleEntry<VueMaxLinesPerBlock>
  /**
   * require component names to be always multi-word
   * @see https://eslint.vuejs.org/rules/multi-word-component-names.html
   */
  'vue/multi-word-component-names'?: Linter.RuleEntry<VueMultiWordComponentNames>
  /**
   * require a line break before and after the contents of a multiline element
   * @see https://eslint.vuejs.org/rules/multiline-html-element-content-newline.html
   */
  'vue/multiline-html-element-content-newline'?: Linter.RuleEntry<VueMultilineHtmlElementContentNewline>
  /**
   * Enforce newlines between operands of ternary expressions in \`<template>\`
   * @see https://eslint.vuejs.org/rules/multiline-ternary.html
   */
  'vue/multiline-ternary'?: Linter.RuleEntry<VueMultilineTernary>
  /**
   * enforce unified spacing in mustache interpolations
   * @see https://eslint.vuejs.org/rules/mustache-interpolation-spacing.html
   */
  'vue/mustache-interpolation-spacing'?: Linter.RuleEntry<VueMustacheInterpolationSpacing>
  /**
   * enforce new lines between multi-line properties in Vue components
   * @see https://eslint.vuejs.org/rules/new-line-between-multi-line-property.html
   */
  'vue/new-line-between-multi-line-property'?: Linter.RuleEntry<VueNewLineBetweenMultiLineProperty>
  /**
   * enforce Promise or callback style in \`nextTick\`
   * @see https://eslint.vuejs.org/rules/next-tick-style.html
   */
  'vue/next-tick-style'?: Linter.RuleEntry<VueNextTickStyle>
  'vue/no-arrow-functions-in-watch'?: Linter.RuleEntry<[]>
  'vue/no-async-in-computed-properties'?: Linter.RuleEntry<[]>
  /**
   * disallow the use of bare strings in \`<template>\`
   * @see https://eslint.vuejs.org/rules/no-bare-strings-in-template.html
   */
  'vue/no-bare-strings-in-template'?: Linter.RuleEntry<VueNoBareStringsInTemplate>
  /**
   * disallow boolean defaults
   * @see https://eslint.vuejs.org/rules/no-boolean-default.html
   */
  'vue/no-boolean-default'?: Linter.RuleEntry<VueNoBooleanDefault>
  /**
   * disallow element's child contents which would be overwritten by a directive like \`v-html\` or \`v-text\`
   * @see https://eslint.vuejs.org/rules/no-child-content.html
   */
  'vue/no-child-content'?: Linter.RuleEntry<VueNoChildContent>
  'vue/no-computed-properties-in-data'?: Linter.RuleEntry<[]>
  /**
   * Disallow the use of \`console\` in \`<template>\`
   * @see https://eslint.vuejs.org/rules/no-console.html
   */
  'vue/no-console'?: Linter.RuleEntry<VueNoConsole>
  /**
   * Disallow constant expressions in conditions in \`<template>\`
   * @see https://eslint.vuejs.org/rules/no-constant-condition.html
   */
  'vue/no-constant-condition'?: Linter.RuleEntry<VueNoConstantCondition>
  'vue/no-custom-modifiers-on-v-model'?: Linter.RuleEntry<[]>
  'vue/no-deprecated-data-object-declaration'?: Linter.RuleEntry<[]>
  'vue/no-deprecated-destroyed-lifecycle'?: Linter.RuleEntry<[]>
  'vue/no-deprecated-dollar-listeners-api'?: Linter.RuleEntry<[]>
  'vue/no-deprecated-dollar-scopedslots-api'?: Linter.RuleEntry<[]>
  'vue/no-deprecated-events-api'?: Linter.RuleEntry<[]>
  'vue/no-deprecated-filter'?: Linter.RuleEntry<[]>
  'vue/no-deprecated-functional-template'?: Linter.RuleEntry<[]>
  'vue/no-deprecated-html-element-is'?: Linter.RuleEntry<[]>
  'vue/no-deprecated-inline-template'?: Linter.RuleEntry<[]>
  /**
   * disallow deprecated \`model\` definition (in Vue.js 3.0.0+)
   * @see https://eslint.vuejs.org/rules/no-deprecated-model-definition.html
   */
  'vue/no-deprecated-model-definition'?: Linter.RuleEntry<VueNoDeprecatedModelDefinition>
  'vue/no-deprecated-props-default-this'?: Linter.RuleEntry<[]>
  /**
   * disallow using deprecated \`tag\` property on \`RouterLink\` (in Vue.js 3.0.0+)
   * @see https://eslint.vuejs.org/rules/no-deprecated-router-link-tag-prop.html
   */
  'vue/no-deprecated-router-link-tag-prop'?: Linter.RuleEntry<VueNoDeprecatedRouterLinkTagProp>
  'vue/no-deprecated-scope-attribute'?: Linter.RuleEntry<[]>
  /**
   * disallow deprecated \`slot\` attribute (in Vue.js 2.6.0+)
   * @see https://eslint.vuejs.org/rules/no-deprecated-slot-attribute.html
   */
  'vue/no-deprecated-slot-attribute'?: Linter.RuleEntry<VueNoDeprecatedSlotAttribute>
  'vue/no-deprecated-slot-scope-attribute'?: Linter.RuleEntry<[]>
  'vue/no-deprecated-v-bind-sync'?: Linter.RuleEntry<[]>
  'vue/no-deprecated-v-is'?: Linter.RuleEntry<[]>
  'vue/no-deprecated-v-on-native-modifier'?: Linter.RuleEntry<[]>
  'vue/no-deprecated-v-on-number-modifiers'?: Linter.RuleEntry<[]>
  'vue/no-deprecated-vue-config-keycodes'?: Linter.RuleEntry<[]>
  /**
   * disallow duplication of field names
   * @see https://eslint.vuejs.org/rules/no-dupe-keys.html
   */
  'vue/no-dupe-keys'?: Linter.RuleEntry<VueNoDupeKeys>
  'vue/no-dupe-v-else-if'?: Linter.RuleEntry<[]>
  'vue/no-duplicate-attr-inheritance'?: Linter.RuleEntry<[]>
  /**
   * disallow duplication of attributes
   * @see https://eslint.vuejs.org/rules/no-duplicate-attributes.html
   */
  'vue/no-duplicate-attributes'?: Linter.RuleEntry<VueNoDuplicateAttributes>
  'vue/no-empty-component-block'?: Linter.RuleEntry<[]>
  /**
   * Disallow empty destructuring patterns in \`<template>\`
   * @see https://eslint.vuejs.org/rules/no-empty-pattern.html
   */
  'vue/no-empty-pattern'?: Linter.RuleEntry<VueNoEmptyPattern>
  'vue/no-export-in-script-setup'?: Linter.RuleEntry<[]>
  'vue/no-expose-after-await'?: Linter.RuleEntry<[]>
  /**
   * Disallow unnecessary parentheses in \`<template>\`
   * @see https://eslint.vuejs.org/rules/no-extra-parens.html
   */
  'vue/no-extra-parens'?: Linter.RuleEntry<VueNoExtraParens>
  'vue/no-invalid-model-keys'?: Linter.RuleEntry<[]>
  /**
   * disallow irregular whitespace in \`.vue\` files
   * @see https://eslint.vuejs.org/rules/no-irregular-whitespace.html
   */
  'vue/no-irregular-whitespace'?: Linter.RuleEntry<VueNoIrregularWhitespace>
  'vue/no-lifecycle-after-await'?: Linter.RuleEntry<[]>
  /**
   * disallow unnecessary \`<template>\`
   * @see https://eslint.vuejs.org/rules/no-lone-template.html
   */
  'vue/no-lone-template'?: Linter.RuleEntry<VueNoLoneTemplate>
  'vue/no-loss-of-precision'?: Linter.RuleEntry<[]>
  /**
   * disallow multiple spaces
   * @see https://eslint.vuejs.org/rules/no-multi-spaces.html
   */
  'vue/no-multi-spaces'?: Linter.RuleEntry<VueNoMultiSpaces>
  'vue/no-multiple-objects-in-class'?: Linter.RuleEntry<[]>
  'vue/no-multiple-slot-args'?: Linter.RuleEntry<[]>
  'vue/no-multiple-template-root'?: Linter.RuleEntry<[]>
  /**
   * disallow mutation of component props
   * @see https://eslint.vuejs.org/rules/no-mutating-props.html
   */
  'vue/no-mutating-props'?: Linter.RuleEntry<VueNoMutatingProps>
  /**
   * disallow parsing errors in \`<template>\`
   * @see https://eslint.vuejs.org/rules/no-parsing-error.html
   */
  'vue/no-parsing-error'?: Linter.RuleEntry<VueNoParsingError>
  /**
   * disallow a potential typo in your component property
   * @see https://eslint.vuejs.org/rules/no-potential-component-option-typo.html
   */
  'vue/no-potential-component-option-typo'?: Linter.RuleEntry<VueNoPotentialComponentOptionTypo>
  'vue/no-ref-as-operand'?: Linter.RuleEntry<[]>
  'vue/no-ref-object-destructure'?: Linter.RuleEntry<[]>
  'vue/no-ref-object-reactivity-loss'?: Linter.RuleEntry<[]>
  /**
   * enforce props with default values to be optional
   * @see https://eslint.vuejs.org/rules/no-required-prop-with-default.html
   */
  'vue/no-required-prop-with-default'?: Linter.RuleEntry<VueNoRequiredPropWithDefault>
  /**
   * disallow the use of reserved names in component definitions
   * @see https://eslint.vuejs.org/rules/no-reserved-component-names.html
   */
  'vue/no-reserved-component-names'?: Linter.RuleEntry<VueNoReservedComponentNames>
  /**
   * disallow overwriting reserved keys
   * @see https://eslint.vuejs.org/rules/no-reserved-keys.html
   */
  'vue/no-reserved-keys'?: Linter.RuleEntry<VueNoReservedKeys>
  /**
   * disallow reserved names in props
   * @see https://eslint.vuejs.org/rules/no-reserved-props.html
   */
  'vue/no-reserved-props'?: Linter.RuleEntry<VueNoReservedProps>
  /**
   * disallow specific block
   * @see https://eslint.vuejs.org/rules/no-restricted-block.html
   */
  'vue/no-restricted-block'?: Linter.RuleEntry<VueNoRestrictedBlock>
  /**
   * disallow asynchronously called restricted methods
   * @see https://eslint.vuejs.org/rules/no-restricted-call-after-await.html
   */
  'vue/no-restricted-call-after-await'?: Linter.RuleEntry<VueNoRestrictedCallAfterAwait>
  /**
   * disallow specific classes in Vue components
   * @see https://eslint.vuejs.org/rules/no-restricted-class.html
   */
  'vue/no-restricted-class'?: Linter.RuleEntry<VueNoRestrictedClass>
  /**
   * disallow specific component names
   * @see https://eslint.vuejs.org/rules/no-restricted-component-names.html
   */
  'vue/no-restricted-component-names'?: Linter.RuleEntry<VueNoRestrictedComponentNames>
  /**
   * disallow specific component option
   * @see https://eslint.vuejs.org/rules/no-restricted-component-options.html
   */
  'vue/no-restricted-component-options'?: Linter.RuleEntry<VueNoRestrictedComponentOptions>
  /**
   * disallow specific custom event
   * @see https://eslint.vuejs.org/rules/no-restricted-custom-event.html
   */
  'vue/no-restricted-custom-event'?: Linter.RuleEntry<VueNoRestrictedCustomEvent>
  /**
   * disallow specific HTML elements
   * @see https://eslint.vuejs.org/rules/no-restricted-html-elements.html
   */
  'vue/no-restricted-html-elements'?: Linter.RuleEntry<VueNoRestrictedHtmlElements>
  /**
   * disallow specific props
   * @see https://eslint.vuejs.org/rules/no-restricted-props.html
   */
  'vue/no-restricted-props'?: Linter.RuleEntry<VueNoRestrictedProps>
  /**
   * disallow specific attribute
   * @see https://eslint.vuejs.org/rules/no-restricted-static-attribute.html
   */
  'vue/no-restricted-static-attribute'?: Linter.RuleEntry<VueNoRestrictedStaticAttribute>
  /**
   * Disallow specified syntax in \`<template>\`
   * @see https://eslint.vuejs.org/rules/no-restricted-syntax.html
   */
  'vue/no-restricted-syntax'?: Linter.RuleEntry<VueNoRestrictedSyntax>
  /**
   * disallow specific argument in \`v-bind\`
   * @see https://eslint.vuejs.org/rules/no-restricted-v-bind.html
   */
  'vue/no-restricted-v-bind'?: Linter.RuleEntry<VueNoRestrictedVBind>
  /**
   * disallow specific argument in \`v-on\`
   * @see https://eslint.vuejs.org/rules/no-restricted-v-on.html
   */
  'vue/no-restricted-v-on'?: Linter.RuleEntry<VueNoRestrictedVOn>
  'vue/no-root-v-if'?: Linter.RuleEntry<[]>
  'vue/no-setup-props-destructure'?: Linter.RuleEntry<[]>
  'vue/no-setup-props-reactivity-loss'?: Linter.RuleEntry<[]>
  'vue/no-shared-component-data'?: Linter.RuleEntry<[]>
  'vue/no-side-effects-in-computed-properties'?: Linter.RuleEntry<[]>
  'vue/no-spaces-around-equal-signs-in-attribute'?: Linter.RuleEntry<[]>
  'vue/no-sparse-arrays'?: Linter.RuleEntry<[]>
  /**
   * disallow static inline \`style\` attributes
   * @see https://eslint.vuejs.org/rules/no-static-inline-styles.html
   */
  'vue/no-static-inline-styles'?: Linter.RuleEntry<VueNoStaticInlineStyles>
  'vue/no-template-key'?: Linter.RuleEntry<[]>
  /**
   * disallow variable declarations from shadowing variables declared in the outer scope
   * @see https://eslint.vuejs.org/rules/no-template-shadow.html
   */
  'vue/no-template-shadow'?: Linter.RuleEntry<VueNoTemplateShadow>
  /**
   * disallow target="_blank" attribute without rel="noopener noreferrer"
   * @see https://eslint.vuejs.org/rules/no-template-target-blank.html
   */
  'vue/no-template-target-blank'?: Linter.RuleEntry<VueNoTemplateTargetBlank>
  'vue/no-textarea-mustache'?: Linter.RuleEntry<[]>
  'vue/no-this-in-before-route-enter'?: Linter.RuleEntry<[]>
  /**
   * disallow use of undefined components in \`<template>\`
   * @see https://eslint.vuejs.org/rules/no-undef-components.html
   */
  'vue/no-undef-components'?: Linter.RuleEntry<VueNoUndefComponents>
  /**
   * disallow undefined properties
   * @see https://eslint.vuejs.org/rules/no-undef-properties.html
   */
  'vue/no-undef-properties'?: Linter.RuleEntry<VueNoUndefProperties>
  /**
   * disallow unsupported Vue.js syntax on the specified version
   * @see https://eslint.vuejs.org/rules/no-unsupported-features.html
   */
  'vue/no-unsupported-features'?: Linter.RuleEntry<VueNoUnsupportedFeatures>
  /**
   * disallow registering components that are not used inside templates
   * @see https://eslint.vuejs.org/rules/no-unused-components.html
   */
  'vue/no-unused-components'?: Linter.RuleEntry<VueNoUnusedComponents>
  'vue/no-unused-emit-declarations'?: Linter.RuleEntry<[]>
  /**
   * disallow unused properties
   * @see https://eslint.vuejs.org/rules/no-unused-properties.html
   */
  'vue/no-unused-properties'?: Linter.RuleEntry<VueNoUnusedProperties>
  'vue/no-unused-refs'?: Linter.RuleEntry<[]>
  /**
   * disallow unused variable definitions of v-for directives or scope attributes
   * @see https://eslint.vuejs.org/rules/no-unused-vars.html
   */
  'vue/no-unused-vars'?: Linter.RuleEntry<VueNoUnusedVars>
  'vue/no-use-computed-property-like-method'?: Linter.RuleEntry<[]>
  'vue/no-use-v-else-with-v-for'?: Linter.RuleEntry<[]>
  /**
   * disallow using \`v-if\` on the same element as \`v-for\`
   * @see https://eslint.vuejs.org/rules/no-use-v-if-with-v-for.html
   */
  'vue/no-use-v-if-with-v-for'?: Linter.RuleEntry<VueNoUseVIfWithVFor>
  'vue/no-useless-concat'?: Linter.RuleEntry<[]>
  /**
   * disallow unnecessary mustache interpolations
   * @see https://eslint.vuejs.org/rules/no-useless-mustaches.html
   */
  'vue/no-useless-mustaches'?: Linter.RuleEntry<VueNoUselessMustaches>
  'vue/no-useless-template-attributes'?: Linter.RuleEntry<[]>
  /**
   * disallow unnecessary \`v-bind\` directives
   * @see https://eslint.vuejs.org/rules/no-useless-v-bind.html
   */
  'vue/no-useless-v-bind'?: Linter.RuleEntry<VueNoUselessVBind>
  'vue/no-v-for-template-key'?: Linter.RuleEntry<[]>
  'vue/no-v-for-template-key-on-child'?: Linter.RuleEntry<[]>
  'vue/no-v-html'?: Linter.RuleEntry<[]>
  'vue/no-v-model-argument'?: Linter.RuleEntry<[]>
  'vue/no-v-text'?: Linter.RuleEntry<[]>
  /**
   * disallow v-text / v-html on component
   * @see https://eslint.vuejs.org/rules/no-v-text-v-html-on-component.html
   */
  'vue/no-v-text-v-html-on-component'?: Linter.RuleEntry<VueNoVTextVHtmlOnComponent>
  'vue/no-watch-after-await'?: Linter.RuleEntry<[]>
  /**
   * Enforce consistent line breaks after opening and before closing braces in \`<template>\`
   * @see https://eslint.vuejs.org/rules/object-curly-newline.html
   */
  'vue/object-curly-newline'?: Linter.RuleEntry<VueObjectCurlyNewline>
  /**
   * Enforce consistent spacing inside braces in \`<template>\`
   * @see https://eslint.vuejs.org/rules/object-curly-spacing.html
   */
  'vue/object-curly-spacing'?: Linter.RuleEntry<VueObjectCurlySpacing>
  /**
   * Enforce placing object properties on separate lines in \`<template>\`
   * @see https://eslint.vuejs.org/rules/object-property-newline.html
   */
  'vue/object-property-newline'?: Linter.RuleEntry<VueObjectPropertyNewline>
  /**
   * Require or disallow method and property shorthand syntax for object literals in \`<template>\`
   * @see https://eslint.vuejs.org/rules/object-shorthand.html
   */
  'vue/object-shorthand'?: Linter.RuleEntry<VueObjectShorthand>
  'vue/one-component-per-file'?: Linter.RuleEntry<[]>
  /**
   * Enforce consistent linebreak style for operators in \`<template>\`
   * @see https://eslint.vuejs.org/rules/operator-linebreak.html
   */
  'vue/operator-linebreak'?: Linter.RuleEntry<VueOperatorLinebreak>
  /**
   * enforce order of properties in components
   * @see https://eslint.vuejs.org/rules/order-in-components.html
   */
  'vue/order-in-components'?: Linter.RuleEntry<VueOrderInComponents>
  /**
   * require or disallow padding lines between blocks
   * @see https://eslint.vuejs.org/rules/padding-line-between-blocks.html
   */
  'vue/padding-line-between-blocks'?: Linter.RuleEntry<VuePaddingLineBetweenBlocks>
  /**
   * require or disallow newlines between sibling tags in template
   * @see https://eslint.vuejs.org/rules/padding-line-between-tags.html
   */
  'vue/padding-line-between-tags'?: Linter.RuleEntry<VuePaddingLineBetweenTags>
  /**
   * require or disallow padding lines in component definition
   * @see https://eslint.vuejs.org/rules/padding-lines-in-component-definition.html
   */
  'vue/padding-lines-in-component-definition'?: Linter.RuleEntry<VuePaddingLinesInComponentDefinition>
  'vue/prefer-define-options'?: Linter.RuleEntry<[]>
  'vue/prefer-import-from-vue'?: Linter.RuleEntry<[]>
  'vue/prefer-prop-type-boolean-first'?: Linter.RuleEntry<[]>
  'vue/prefer-separate-static-class'?: Linter.RuleEntry<[]>
  'vue/prefer-template'?: Linter.RuleEntry<[]>
  /**
   * require shorthand form attribute when \`v-bind\` value is \`true\`
   * @see https://eslint.vuejs.org/rules/prefer-true-attribute-shorthand.html
   */
  'vue/prefer-true-attribute-shorthand'?: Linter.RuleEntry<VuePreferTrueAttributeShorthand>
  /**
   * enforce specific casing for the Prop name in Vue components
   * @see https://eslint.vuejs.org/rules/prop-name-casing.html
   */
  'vue/prop-name-casing'?: Linter.RuleEntry<VuePropNameCasing>
  /**
   * Require quotes around object literal property names in \`<template>\`
   * @see https://eslint.vuejs.org/rules/quote-props.html
   */
  'vue/quote-props'?: Linter.RuleEntry<VueQuoteProps>
  'vue/require-component-is'?: Linter.RuleEntry<[]>
  'vue/require-default-prop'?: Linter.RuleEntry<[]>
  /**
   * require the component to be directly exported
   * @see https://eslint.vuejs.org/rules/require-direct-export.html
   */
  'vue/require-direct-export'?: Linter.RuleEntry<VueRequireDirectExport>
  'vue/require-emit-validator'?: Linter.RuleEntry<[]>
  /**
   * require \`emits\` option with name triggered by \`$emit()\`
   * @see https://eslint.vuejs.org/rules/require-explicit-emits.html
   */
  'vue/require-explicit-emits'?: Linter.RuleEntry<VueRequireExplicitEmits>
  'vue/require-explicit-slots'?: Linter.RuleEntry<[]>
  'vue/require-expose'?: Linter.RuleEntry<[]>
  /**
   * require a certain macro variable name
   * @see https://eslint.vuejs.org/rules/require-macro-variable-name.html
   */
  'vue/require-macro-variable-name'?: Linter.RuleEntry<VueRequireMacroVariableName>
  'vue/require-name-property'?: Linter.RuleEntry<[]>
  /**
   * require props to have a comment
   * @see https://eslint.vuejs.org/rules/require-prop-comment.html
   */
  'vue/require-prop-comment'?: Linter.RuleEntry<VueRequirePropComment>
  'vue/require-prop-type-constructor'?: Linter.RuleEntry<[]>
  'vue/require-prop-types'?: Linter.RuleEntry<[]>
  'vue/require-render-return'?: Linter.RuleEntry<[]>
  'vue/require-slots-as-functions'?: Linter.RuleEntry<[]>
  'vue/require-toggle-inside-transition'?: Linter.RuleEntry<[]>
  'vue/require-typed-object-prop'?: Linter.RuleEntry<[]>
  'vue/require-typed-ref'?: Linter.RuleEntry<[]>
  'vue/require-v-for-key'?: Linter.RuleEntry<[]>
  'vue/require-valid-default-prop'?: Linter.RuleEntry<[]>
  /**
   * enforce that a return statement is present in computed property
   * @see https://eslint.vuejs.org/rules/return-in-computed-property.html
   */
  'vue/return-in-computed-property'?: Linter.RuleEntry<VueReturnInComputedProperty>
  'vue/return-in-emits-validator'?: Linter.RuleEntry<[]>
  /**
   * enforce consistent indentation in \`<script>\`
   * @see https://eslint.vuejs.org/rules/script-indent.html
   */
  'vue/script-indent'?: Linter.RuleEntry<VueScriptIndent>
  'vue/script-setup-uses-vars'?: Linter.RuleEntry<[]>
  /**
   * require a line break before and after the contents of a singleline element
   * @see https://eslint.vuejs.org/rules/singleline-html-element-content-newline.html
   */
  'vue/singleline-html-element-content-newline'?: Linter.RuleEntry<VueSinglelineHtmlElementContentNewline>
  /**
   * enforce sort-keys in a manner that is compatible with order-in-components
   * @see https://eslint.vuejs.org/rules/sort-keys.html
   */
  'vue/sort-keys'?: Linter.RuleEntry<VueSortKeys>
  /**
   * Enforce consistent spacing inside parentheses in \`<template>\`
   * @see https://eslint.vuejs.org/rules/space-in-parens.html
   */
  'vue/space-in-parens'?: Linter.RuleEntry<VueSpaceInParens>
  /**
   * Require spacing around infix operators in \`<template>\`
   * @see https://eslint.vuejs.org/rules/space-infix-ops.html
   */
  'vue/space-infix-ops'?: Linter.RuleEntry<VueSpaceInfixOps>
  /**
   * Enforce consistent spacing before or after unary operators in \`<template>\`
   * @see https://eslint.vuejs.org/rules/space-unary-ops.html
   */
  'vue/space-unary-ops'?: Linter.RuleEntry<VueSpaceUnaryOps>
  'vue/static-class-names-order'?: Linter.RuleEntry<[]>
  /**
   * Require or disallow spacing around embedded expressions of template strings in \`<template>\`
   * @see https://eslint.vuejs.org/rules/template-curly-spacing.html
   */
  'vue/template-curly-spacing'?: Linter.RuleEntry<VueTemplateCurlySpacing>
  /**
   * disallow usage of \`this\` in template
   * @see https://eslint.vuejs.org/rules/this-in-template.html
   */
  'vue/this-in-template'?: Linter.RuleEntry<VueThisInTemplate>
  'vue/use-v-on-exact'?: Linter.RuleEntry<[]>
  /**
   * enforce \`v-bind\` directive style
   * @see https://eslint.vuejs.org/rules/v-bind-style.html
   */
  'vue/v-bind-style'?: Linter.RuleEntry<VueVBindStyle>
  /**
   * enforce \`v-for\` directive's delimiter style
   * @see https://eslint.vuejs.org/rules/v-for-delimiter-style.html
   */
  'vue/v-for-delimiter-style'?: Linter.RuleEntry<VueVForDelimiterStyle>
  'vue/v-if-else-key'?: Linter.RuleEntry<[]>
  /**
   * enforce v-on event naming style on custom components in template
   * @see https://eslint.vuejs.org/rules/v-on-event-hyphenation.html
   */
  'vue/v-on-event-hyphenation'?: Linter.RuleEntry<VueVOnEventHyphenation>
  /**
   * enforce or forbid parentheses after method calls without arguments in \`v-on\` directives
   * @see https://eslint.vuejs.org/rules/v-on-function-call.html
   * @deprecated
   */
  'vue/v-on-function-call'?: Linter.RuleEntry<VueVOnFunctionCall>
  /**
   * enforce writing style for handlers in \`v-on\` directives
   * @see https://eslint.vuejs.org/rules/v-on-handler-style.html
   */
  'vue/v-on-handler-style'?: Linter.RuleEntry<VueVOnHandlerStyle>
  /**
   * enforce \`v-on\` directive style
   * @see https://eslint.vuejs.org/rules/v-on-style.html
   */
  'vue/v-on-style'?: Linter.RuleEntry<VueVOnStyle>
  /**
   * enforce \`v-slot\` directive style
   * @see https://eslint.vuejs.org/rules/v-slot-style.html
   */
  'vue/v-slot-style'?: Linter.RuleEntry<VueVSlotStyle>
  'vue/valid-attribute-name'?: Linter.RuleEntry<[]>
  'vue/valid-define-emits'?: Linter.RuleEntry<[]>
  'vue/valid-define-options'?: Linter.RuleEntry<[]>
  'vue/valid-define-props'?: Linter.RuleEntry<[]>
  'vue/valid-model-definition'?: Linter.RuleEntry<[]>
  'vue/valid-next-tick'?: Linter.RuleEntry<[]>
  'vue/valid-template-root'?: Linter.RuleEntry<[]>
  'vue/valid-v-bind'?: Linter.RuleEntry<[]>
  'vue/valid-v-bind-sync'?: Linter.RuleEntry<[]>
  'vue/valid-v-cloak'?: Linter.RuleEntry<[]>
  'vue/valid-v-else'?: Linter.RuleEntry<[]>
  'vue/valid-v-else-if'?: Linter.RuleEntry<[]>
  'vue/valid-v-for'?: Linter.RuleEntry<[]>
  'vue/valid-v-html'?: Linter.RuleEntry<[]>
  'vue/valid-v-if'?: Linter.RuleEntry<[]>
  'vue/valid-v-is'?: Linter.RuleEntry<[]>
  'vue/valid-v-memo'?: Linter.RuleEntry<[]>
  'vue/valid-v-model'?: Linter.RuleEntry<[]>
  /**
   * enforce valid \`v-on\` directives
   * @see https://eslint.vuejs.org/rules/valid-v-on.html
   */
  'vue/valid-v-on'?: Linter.RuleEntry<VueValidVOn>
  'vue/valid-v-once'?: Linter.RuleEntry<[]>
  'vue/valid-v-pre'?: Linter.RuleEntry<[]>
  'vue/valid-v-show'?: Linter.RuleEntry<[]>
  /**
   * enforce valid \`v-slot\` directives
   * @see https://eslint.vuejs.org/rules/valid-v-slot.html
   */
  'vue/valid-v-slot'?: Linter.RuleEntry<VueValidVSlot>
  'vue/valid-v-text'?: Linter.RuleEntry<[]>
}

/* ======= Declarations ======= */
// ----- vue/array-bracket-newline -----
type _VueArrayBracketNewline0 = (("always" | "never" | "consistent") | {
multiline?: boolean
minItems?: (number | null)
})
type VueArrayBracketNewline = [_VueArrayBracketNewline0]
// ----- vue/array-bracket-spacing -----
type _VueArrayBracketSpacing0 = ("always" | "never")
interface _VueArrayBracketSpacing1 {
singleValue?: boolean
objectsInArrays?: boolean
arraysInArrays?: boolean
}
type VueArrayBracketSpacing = [_VueArrayBracketSpacing0, _VueArrayBracketSpacing1]
// ----- vue/array-element-newline -----
type VueArrayElementNewline = []|[(BasicConfig | {
ArrayExpression?: BasicConfig
ArrayPattern?: BasicConfig
})]
type BasicConfig = (("always" | "never" | "consistent") | {
multiline?: boolean
minItems?: (number | null)
})
type VueArrayElementNewline = VueArrayElementNewline[]
// ----- vue/arrow-spacing -----
interface _VueArrowSpacing0 {
before?: boolean
after?: boolean
}
type VueArrowSpacing = [_VueArrowSpacing0]
// ----- vue/attribute-hyphenation -----
type _VueAttributeHyphenation0 = ("always" | "never")
interface _VueAttributeHyphenation1 {
ignore?: (string & {
[k: string]: unknown
} & {
[k: string]: unknown
})[]
}
type VueAttributeHyphenation = [_VueAttributeHyphenation0, _VueAttributeHyphenation1]
// ----- vue/attributes-order -----
interface _VueAttributesOrder0 {
order?: (("DEFINITION" | "LIST_RENDERING" | "CONDITIONALS" | "RENDER_MODIFIERS" | "GLOBAL" | "UNIQUE" | "SLOT" | "TWO_WAY_BINDING" | "OTHER_DIRECTIVES" | "OTHER_ATTR" | "ATTR_STATIC" | "ATTR_DYNAMIC" | "ATTR_SHORTHAND_BOOL" | "EVENTS" | "CONTENT") | ("DEFINITION" | "LIST_RENDERING" | "CONDITIONALS" | "RENDER_MODIFIERS" | "GLOBAL" | "UNIQUE" | "SLOT" | "TWO_WAY_BINDING" | "OTHER_DIRECTIVES" | "OTHER_ATTR" | "ATTR_STATIC" | "ATTR_DYNAMIC" | "ATTR_SHORTHAND_BOOL" | "EVENTS" | "CONTENT")[])[]
alphabetical?: boolean
}
type VueAttributesOrder = [_VueAttributesOrder0]
// ----- vue/block-lang -----
interface _VueBlockLang0 {
[k: string]: {
lang?: (string | string[])
allowNoLang?: boolean
}
}
type VueBlockLang = [_VueBlockLang0]
// ----- vue/block-order -----
interface _VueBlockOrder0 {
order?: (string | string[])[]
}
type VueBlockOrder = [_VueBlockOrder0]
// ----- vue/block-spacing -----
type _VueBlockSpacing0 = ("always" | "never")
type VueBlockSpacing = [_VueBlockSpacing0]
// ----- vue/block-tag-newline -----
interface _VueBlockTagNewline0 {
singleline?: ("always" | "never" | "consistent" | "ignore")
multiline?: ("always" | "never" | "consistent" | "ignore")
maxEmptyLines?: number
blocks?: {
[k: string]: {
singleline?: ("always" | "never" | "consistent" | "ignore")
multiline?: ("always" | "never" | "consistent" | "ignore")
maxEmptyLines?: number
}
}
}
type VueBlockTagNewline = [_VueBlockTagNewline0]
// ----- vue/brace-style -----
type _VueBraceStyle0 = ("1tbs" | "stroustrup" | "allman")
interface _VueBraceStyle1 {
allowSingleLine?: boolean
}
type VueBraceStyle = [_VueBraceStyle0, _VueBraceStyle1]
// ----- vue/camelcase -----
interface _VueCamelcase0 {
ignoreDestructuring?: boolean
ignoreImports?: boolean
ignoreGlobals?: boolean
properties?: ("always" | "never")
allow?: []|[string]
}
type VueCamelcase = [_VueCamelcase0]
// ----- vue/comma-dangle -----
type VueCommaDangle = []|[(Value | {
arrays?: ValueWithIgnore
objects?: ValueWithIgnore
imports?: ValueWithIgnore
exports?: ValueWithIgnore
functions?: ValueWithIgnore
enums?: ValueWithIgnore
generics?: ValueWithIgnore
tuples?: ValueWithIgnore
})]
type Value = ("always-multiline" | "always" | "never" | "only-multiline")
type ValueWithIgnore = ("always-multiline" | "always" | "never" | "only-multiline" | "ignore")
type VueCommaDangle = VueCommaDangle[]
// ----- vue/comma-spacing -----
interface _VueCommaSpacing0 {
before?: boolean
after?: boolean
}
type VueCommaSpacing = [_VueCommaSpacing0]
// ----- vue/comma-style -----
type _VueCommaStyle0 = ("first" | "last")
interface _VueCommaStyle1 {
exceptions?: {
[k: string]: boolean
}
}
type VueCommaStyle = [_VueCommaStyle0, _VueCommaStyle1]
// ----- vue/comment-directive -----
interface _VueCommentDirective0 {
reportUnusedDisableDirectives?: boolean
}
type VueCommentDirective = [_VueCommentDirective0]
// ----- vue/component-api-style -----
type _VueComponentApiStyle0 = [("script-setup" | "composition" | "composition-vue2" | "options"), ...(("script-setup" | "composition" | "composition-vue2" | "options"))[]]
type VueComponentApiStyle = [_VueComponentApiStyle0]
// ----- vue/component-definition-name-casing -----
type _VueComponentDefinitionNameCasing0 = ("PascalCase" | "kebab-case")
type VueComponentDefinitionNameCasing = [_VueComponentDefinitionNameCasing0]
// ----- vue/component-name-in-template-casing -----
type _VueComponentNameInTemplateCasing0 = ("PascalCase" | "kebab-case")
interface _VueComponentNameInTemplateCasing1 {
globals?: string[]
ignores?: string[]
registeredComponentsOnly?: boolean
}
type VueComponentNameInTemplateCasing = [_VueComponentNameInTemplateCasing0, _VueComponentNameInTemplateCasing1]
// ----- vue/component-options-name-casing -----
type _VueComponentOptionsNameCasing0 = ("camelCase" | "kebab-case" | "PascalCase")
type VueComponentOptionsNameCasing = [_VueComponentOptionsNameCasing0]
// ----- vue/component-tags-order -----
interface _VueComponentTagsOrder0 {
order?: (string | string[])[]
}
type VueComponentTagsOrder = [_VueComponentTagsOrder0]
// ----- vue/custom-event-name-casing -----
type VueCustomEventNameCasing = ([]|[("kebab-case" | "camelCase")]|[("kebab-case" | "camelCase"), {
ignores?: string[]
}] | []|[{
ignores?: string[]
}])
type VueCustomEventNameCasing = VueCustomEventNameCasing[]
// ----- vue/define-emits-declaration -----
type _VueDefineEmitsDeclaration0 = ("type-based" | "type-literal" | "runtime")
type VueDefineEmitsDeclaration = [_VueDefineEmitsDeclaration0]
// ----- vue/define-macros-order -----
interface _VueDefineMacrosOrder0 {
order?: ("defineEmits" | "defineProps" | "defineOptions" | "defineSlots" | "defineModel")[]
defineExposeLast?: boolean
}
type VueDefineMacrosOrder = [_VueDefineMacrosOrder0]
// ----- vue/define-props-declaration -----
type _VueDefinePropsDeclaration0 = ("type-based" | "runtime")
type VueDefinePropsDeclaration = [_VueDefinePropsDeclaration0]
// ----- vue/dot-location -----
type _VueDotLocation0 = ("object" | "property")
type VueDotLocation = [_VueDotLocation0]
// ----- vue/dot-notation -----
interface _VueDotNotation0 {
allowKeywords?: boolean
allowPattern?: string
}
type VueDotNotation = [_VueDotNotation0]
// ----- vue/enforce-style-attribute -----
interface _VueEnforceStyleAttribute0 {
allow?: [("plain" | "scoped" | "module"), ...(("plain" | "scoped" | "module"))[]]
}
type VueEnforceStyleAttribute = [_VueEnforceStyleAttribute0]
// ----- vue/eqeqeq -----
type VueEqeqeq = ([]|["always"]|["always", {
null?: ("always" | "never" | "ignore")
}] | []|[("smart" | "allow-null")])
type VueEqeqeq = VueEqeqeq[]
// ----- vue/first-attribute-linebreak -----
interface _VueFirstAttributeLinebreak0 {
multiline?: ("below" | "beside" | "ignore")
singleline?: ("below" | "beside" | "ignore")
}
type VueFirstAttributeLinebreak = [_VueFirstAttributeLinebreak0]
// ----- vue/func-call-spacing -----
type VueFuncCallSpacing = ([]|["never"] | []|["always"]|["always", {
allowNewlines?: boolean
}])
type VueFuncCallSpacing = VueFuncCallSpacing[]
// ----- vue/html-button-has-type -----
interface _VueHtmlButtonHasType0 {
button?: boolean
submit?: boolean
reset?: boolean
}
type VueHtmlButtonHasType = [_VueHtmlButtonHasType0]
// ----- vue/html-closing-bracket-newline -----
interface _VueHtmlClosingBracketNewline0 {
singleline?: ("always" | "never")
multiline?: ("always" | "never")
selfClosingTag?: {
singleline?: ("always" | "never")
multiline?: ("always" | "never")
}
}
type VueHtmlClosingBracketNewline = [_VueHtmlClosingBracketNewline0]
// ----- vue/html-closing-bracket-spacing -----
interface _VueHtmlClosingBracketSpacing0 {
startTag?: ("always" | "never")
endTag?: ("always" | "never")
selfClosingTag?: ("always" | "never")
}
type VueHtmlClosingBracketSpacing = [_VueHtmlClosingBracketSpacing0]
// ----- vue/html-comment-content-newline -----
type _VueHtmlCommentContentNewline0 = (("always" | "never") | {
singleline?: ("always" | "never" | "ignore")
multiline?: ("always" | "never" | "ignore")
})
interface _VueHtmlCommentContentNewline1 {
exceptions?: string[]
}
type VueHtmlCommentContentNewline = [_VueHtmlCommentContentNewline0, _VueHtmlCommentContentNewline1]
// ----- vue/html-comment-content-spacing -----
type _VueHtmlCommentContentSpacing0 = ("always" | "never")
interface _VueHtmlCommentContentSpacing1 {
exceptions?: string[]
}
type VueHtmlCommentContentSpacing = [_VueHtmlCommentContentSpacing0, _VueHtmlCommentContentSpacing1]
// ----- vue/html-comment-indent -----
type _VueHtmlCommentIndent0 = (number | "tab")
type VueHtmlCommentIndent = [_VueHtmlCommentIndent0]
// ----- vue/html-indent -----
type _VueHtmlIndent0 = (number | "tab")
interface _VueHtmlIndent1 {
attribute?: number
baseIndent?: number
closeBracket?: (number | {
startTag?: number
endTag?: number
selfClosingTag?: number
})
switchCase?: number
alignAttributesVertically?: boolean
ignores?: (string & {
[k: string]: unknown
} & {
[k: string]: unknown
})[]
}
type VueHtmlIndent = [_VueHtmlIndent0, _VueHtmlIndent1]
// ----- vue/html-quotes -----
type _VueHtmlQuotes0 = ("double" | "single")
interface _VueHtmlQuotes1 {
avoidEscape?: boolean
}
type VueHtmlQuotes = [_VueHtmlQuotes0, _VueHtmlQuotes1]
// ----- vue/html-self-closing -----
type VueHtmlSelfClosing = []|[{
html?: {
normal?: OptionValue
void?: OptionValue
component?: OptionValue
}
svg?: OptionValue
math?: OptionValue
}]
type OptionValue = ("always" | "never" | "any")
type VueHtmlSelfClosing = VueHtmlSelfClosing[]
// ----- vue/key-spacing -----
type _VueKeySpacing0 = ({
align?: (("colon" | "value") | {
mode?: ("strict" | "minimum")
on?: ("colon" | "value")
beforeColon?: boolean
afterColon?: boolean
})
mode?: ("strict" | "minimum")
beforeColon?: boolean
afterColon?: boolean
} | {
singleLine?: {
mode?: ("strict" | "minimum")
beforeColon?: boolean
afterColon?: boolean
}
multiLine?: {
align?: (("colon" | "value") | {
mode?: ("strict" | "minimum")
on?: ("colon" | "value")
beforeColon?: boolean
afterColon?: boolean
})
mode?: ("strict" | "minimum")
beforeColon?: boolean
afterColon?: boolean
}
} | {
singleLine?: {
mode?: ("strict" | "minimum")
beforeColon?: boolean
afterColon?: boolean
}
multiLine?: {
mode?: ("strict" | "minimum")
beforeColon?: boolean
afterColon?: boolean
}
align?: {
mode?: ("strict" | "minimum")
on?: ("colon" | "value")
beforeColon?: boolean
afterColon?: boolean
}
})
type VueKeySpacing = [_VueKeySpacing0]
// ----- vue/keyword-spacing -----
interface _VueKeywordSpacing0 {
before?: boolean
after?: boolean
overrides?: {
abstract?: {
before?: boolean
after?: boolean
}
as?: {
before?: boolean
after?: boolean
}
async?: {
before?: boolean
after?: boolean
}
await?: {
before?: boolean
after?: boolean
}
boolean?: {
before?: boolean
after?: boolean
}
break?: {
before?: boolean
after?: boolean
}
byte?: {
before?: boolean
after?: boolean
}
case?: {
before?: boolean
after?: boolean
}
catch?: {
before?: boolean
after?: boolean
}
char?: {
before?: boolean
after?: boolean
}
class?: {
before?: boolean
after?: boolean
}
const?: {
before?: boolean
after?: boolean
}
continue?: {
before?: boolean
after?: boolean
}
debugger?: {
before?: boolean
after?: boolean
}
default?: {
before?: boolean
after?: boolean
}
delete?: {
before?: boolean
after?: boolean
}
do?: {
before?: boolean
after?: boolean
}
double?: {
before?: boolean
after?: boolean
}
else?: {
before?: boolean
after?: boolean
}
enum?: {
before?: boolean
after?: boolean
}
export?: {
before?: boolean
after?: boolean
}
extends?: {
before?: boolean
after?: boolean
}
false?: {
before?: boolean
after?: boolean
}
final?: {
before?: boolean
after?: boolean
}
finally?: {
before?: boolean
after?: boolean
}
float?: {
before?: boolean
after?: boolean
}
for?: {
before?: boolean
after?: boolean
}
from?: {
before?: boolean
after?: boolean
}
function?: {
before?: boolean
after?: boolean
}
get?: {
before?: boolean
after?: boolean
}
goto?: {
before?: boolean
after?: boolean
}
if?: {
before?: boolean
after?: boolean
}
implements?: {
before?: boolean
after?: boolean
}
import?: {
before?: boolean
after?: boolean
}
in?: {
before?: boolean
after?: boolean
}
instanceof?: {
before?: boolean
after?: boolean
}
int?: {
before?: boolean
after?: boolean
}
interface?: {
before?: boolean
after?: boolean
}
let?: {
before?: boolean
after?: boolean
}
long?: {
before?: boolean
after?: boolean
}
native?: {
before?: boolean
after?: boolean
}
new?: {
before?: boolean
after?: boolean
}
null?: {
before?: boolean
after?: boolean
}
of?: {
before?: boolean
after?: boolean
}
package?: {
before?: boolean
after?: boolean
}
private?: {
before?: boolean
after?: boolean
}
protected?: {
before?: boolean
after?: boolean
}
public?: {
before?: boolean
after?: boolean
}
return?: {
before?: boolean
after?: boolean
}
set?: {
before?: boolean
after?: boolean
}
short?: {
before?: boolean
after?: boolean
}
static?: {
before?: boolean
after?: boolean
}
super?: {
before?: boolean
after?: boolean
}
switch?: {
before?: boolean
after?: boolean
}
synchronized?: {
before?: boolean
after?: boolean
}
this?: {
before?: boolean
after?: boolean
}
throw?: {
before?: boolean
after?: boolean
}
throws?: {
before?: boolean
after?: boolean
}
transient?: {
before?: boolean
after?: boolean
}
true?: {
before?: boolean
after?: boolean
}
try?: {
before?: boolean
after?: boolean
}
typeof?: {
before?: boolean
after?: boolean
}
var?: {
before?: boolean
after?: boolean
}
void?: {
before?: boolean
after?: boolean
}
volatile?: {
before?: boolean
after?: boolean
}
while?: {
before?: boolean
after?: boolean
}
with?: {
before?: boolean
after?: boolean
}
yield?: {
before?: boolean
after?: boolean
}
type?: {
before?: boolean
after?: boolean
}
}
}
type VueKeywordSpacing = [_VueKeywordSpacing0]
// ----- vue/match-component-file-name -----
interface _VueMatchComponentFileName0 {
extensions?: string[]
shouldMatchCase?: boolean
}
type VueMatchComponentFileName = [_VueMatchComponentFileName0]
// ----- vue/max-attributes-per-line -----
interface _VueMaxAttributesPerLine0 {
singleline?: (number | {
max?: number
})
multiline?: (number | {
max?: number
})
}
type VueMaxAttributesPerLine = [_VueMaxAttributesPerLine0]
// ----- vue/max-len -----
type _VueMaxLen0 = ({
code?: number
template?: number
comments?: number
tabWidth?: number
ignorePattern?: string
ignoreComments?: boolean
ignoreTrailingComments?: boolean
ignoreUrls?: boolean
ignoreStrings?: boolean
ignoreTemplateLiterals?: boolean
ignoreRegExpLiterals?: boolean
ignoreHTMLAttributeValues?: boolean
ignoreHTMLTextContents?: boolean
} | number)
type _VueMaxLen1 = ({
code?: number
template?: number
comments?: number
tabWidth?: number
ignorePattern?: string
ignoreComments?: boolean
ignoreTrailingComments?: boolean
ignoreUrls?: boolean
ignoreStrings?: boolean
ignoreTemplateLiterals?: boolean
ignoreRegExpLiterals?: boolean
ignoreHTMLAttributeValues?: boolean
ignoreHTMLTextContents?: boolean
} | number)
interface _VueMaxLen2 {
code?: number
template?: number
comments?: number
tabWidth?: number
ignorePattern?: string
ignoreComments?: boolean
ignoreTrailingComments?: boolean
ignoreUrls?: boolean
ignoreStrings?: boolean
ignoreTemplateLiterals?: boolean
ignoreRegExpLiterals?: boolean
ignoreHTMLAttributeValues?: boolean
ignoreHTMLTextContents?: boolean
}
type VueMaxLen = [_VueMaxLen0, _VueMaxLen1, _VueMaxLen2]
// ----- vue/max-lines-per-block -----
interface _VueMaxLinesPerBlock0 {
style?: number
template?: number
script?: number
skipBlankLines?: boolean
}
type VueMaxLinesPerBlock = [_VueMaxLinesPerBlock0]
// ----- vue/multi-word-component-names -----
interface _VueMultiWordComponentNames0 {
ignores?: string[]
}
type VueMultiWordComponentNames = [_VueMultiWordComponentNames0]
// ----- vue/multiline-html-element-content-newline -----
interface _VueMultilineHtmlElementContentNewline0 {
ignoreWhenEmpty?: boolean
ignores?: string[]
allowEmptyLines?: boolean
}
type VueMultilineHtmlElementContentNewline = [_VueMultilineHtmlElementContentNewline0]
// ----- vue/multiline-ternary -----
type _VueMultilineTernary0 = ("always" | "always-multiline" | "never")
interface _VueMultilineTernary1 {
ignoreJSX?: boolean
[k: string]: unknown
}
type VueMultilineTernary = [_VueMultilineTernary0, _VueMultilineTernary1]
// ----- vue/mustache-interpolation-spacing -----
type _VueMustacheInterpolationSpacing0 = ("always" | "never")
type VueMustacheInterpolationSpacing = [_VueMustacheInterpolationSpacing0]
// ----- vue/new-line-between-multi-line-property -----
interface _VueNewLineBetweenMultiLineProperty0 {
minLineOfMultilineProperty?: number
}
type VueNewLineBetweenMultiLineProperty = [_VueNewLineBetweenMultiLineProperty0]
// ----- vue/next-tick-style -----
type _VueNextTickStyle0 = ("promise" | "callback")
type VueNextTickStyle = [_VueNextTickStyle0]
// ----- vue/no-bare-strings-in-template -----
interface _VueNoBareStringsInTemplate0 {
allowlist?: string[]
attributes?: {
[k: string]: string[]
}
directives?: string[]
}
type VueNoBareStringsInTemplate = [_VueNoBareStringsInTemplate0]
// ----- vue/no-boolean-default -----
type _VueNoBooleanDefault0 = ("default-false" | "no-default")
type VueNoBooleanDefault = [_VueNoBooleanDefault0]
// ----- vue/no-child-content -----
interface _VueNoChildContent0 {
additionalDirectives: [string, ...(string)[]]
}
type VueNoChildContent = [_VueNoChildContent0]
// ----- vue/no-console -----
interface _VueNoConsole0 {
allow?: [string, ...(string)[]]
}
type VueNoConsole = [_VueNoConsole0]
// ----- vue/no-constant-condition -----
interface _VueNoConstantCondition0 {
checkLoops?: boolean
}
type VueNoConstantCondition = [_VueNoConstantCondition0]
// ----- vue/no-deprecated-model-definition -----
interface _VueNoDeprecatedModelDefinition0 {
allowVue3Compat?: boolean
}
type VueNoDeprecatedModelDefinition = [_VueNoDeprecatedModelDefinition0]
// ----- vue/no-deprecated-router-link-tag-prop -----
interface _VueNoDeprecatedRouterLinkTagProp0 {
components?: [string, ...(string)[]]
}
type VueNoDeprecatedRouterLinkTagProp = [_VueNoDeprecatedRouterLinkTagProp0]
// ----- vue/no-deprecated-slot-attribute -----
interface _VueNoDeprecatedSlotAttribute0 {
ignore?: string[]
}
type VueNoDeprecatedSlotAttribute = [_VueNoDeprecatedSlotAttribute0]
// ----- vue/no-dupe-keys -----
interface _VueNoDupeKeys0 {
groups?: unknown[]
}
type VueNoDupeKeys = [_VueNoDupeKeys0]
// ----- vue/no-duplicate-attributes -----
interface _VueNoDuplicateAttributes0 {
allowCoexistClass?: boolean
allowCoexistStyle?: boolean
}
type VueNoDuplicateAttributes = [_VueNoDuplicateAttributes0]
// ----- vue/no-empty-pattern -----
interface _VueNoEmptyPattern0 {
allowObjectPatternsAsParameters?: boolean
}
type VueNoEmptyPattern = [_VueNoEmptyPattern0]
// ----- vue/no-extra-parens -----
type VueNoExtraParens = ([]|["functions"] | []|["all"]|["all", {
conditionalAssign?: boolean
ternaryOperandBinaryExpressions?: boolean
nestedBinaryExpressions?: boolean
returnAssign?: boolean
ignoreJSX?: ("none" | "all" | "single-line" | "multi-line")
enforceForArrowConditionals?: boolean
enforceForSequenceExpressions?: boolean
enforceForNewInMemberExpressions?: boolean
enforceForFunctionPrototypeMethods?: boolean
allowParensAfterCommentPattern?: string
}])
type VueNoExtraParens = VueNoExtraParens[]
// ----- vue/no-irregular-whitespace -----
interface _VueNoIrregularWhitespace0 {
skipComments?: boolean
skipStrings?: boolean
skipTemplates?: boolean
skipRegExps?: boolean
skipHTMLAttributeValues?: boolean
skipHTMLTextContents?: boolean
}
type VueNoIrregularWhitespace = [_VueNoIrregularWhitespace0]
// ----- vue/no-lone-template -----
interface _VueNoLoneTemplate0 {
ignoreAccessible?: boolean
}
type VueNoLoneTemplate = [_VueNoLoneTemplate0]
// ----- vue/no-multi-spaces -----
interface _VueNoMultiSpaces0 {
ignoreProperties?: boolean
}
type VueNoMultiSpaces = [_VueNoMultiSpaces0]
// ----- vue/no-mutating-props -----
interface _VueNoMutatingProps0 {
shallowOnly?: boolean
}
type VueNoMutatingProps = [_VueNoMutatingProps0]
// ----- vue/no-parsing-error -----
interface _VueNoParsingError0 {
"abrupt-closing-of-empty-comment"?: boolean
"absence-of-digits-in-numeric-character-reference"?: boolean
"cdata-in-html-content"?: boolean
"character-reference-outside-unicode-range"?: boolean
"control-character-in-input-stream"?: boolean
"control-character-reference"?: boolean
"eof-before-tag-name"?: boolean
"eof-in-cdata"?: boolean
"eof-in-comment"?: boolean
"eof-in-tag"?: boolean
"incorrectly-closed-comment"?: boolean
"incorrectly-opened-comment"?: boolean
"invalid-first-character-of-tag-name"?: boolean
"missing-attribute-value"?: boolean
"missing-end-tag-name"?: boolean
"missing-semicolon-after-character-reference"?: boolean
"missing-whitespace-between-attributes"?: boolean
"nested-comment"?: boolean
"noncharacter-character-reference"?: boolean
"noncharacter-in-input-stream"?: boolean
"null-character-reference"?: boolean
"surrogate-character-reference"?: boolean
"surrogate-in-input-stream"?: boolean
"unexpected-character-in-attribute-name"?: boolean
"unexpected-character-in-unquoted-attribute-value"?: boolean
"unexpected-equals-sign-before-attribute-name"?: boolean
"unexpected-null-character"?: boolean
"unexpected-question-mark-instead-of-tag-name"?: boolean
"unexpected-solidus-in-tag"?: boolean
"unknown-named-character-reference"?: boolean
"end-tag-with-attributes"?: boolean
"duplicate-attribute"?: boolean
"end-tag-with-trailing-solidus"?: boolean
"non-void-html-element-start-tag-with-trailing-solidus"?: boolean
"x-invalid-end-tag"?: boolean
"x-invalid-namespace"?: boolean
}
type VueNoParsingError = [_VueNoParsingError0]
// ----- vue/no-potential-component-option-typo -----
interface _VueNoPotentialComponentOptionTypo0 {
presets?: ("all" | "vue" | "vue-router" | "nuxt")[]
custom?: string[]
threshold?: number
}
type VueNoPotentialComponentOptionTypo = [_VueNoPotentialComponentOptionTypo0]
// ----- vue/no-required-prop-with-default -----
interface _VueNoRequiredPropWithDefault0 {
autofix?: boolean
}
type VueNoRequiredPropWithDefault = [_VueNoRequiredPropWithDefault0]
// ----- vue/no-reserved-component-names -----
interface _VueNoReservedComponentNames0 {
disallowVueBuiltInComponents?: boolean
disallowVue3BuiltInComponents?: boolean
}
type VueNoReservedComponentNames = [_VueNoReservedComponentNames0]
// ----- vue/no-reserved-keys -----
interface _VueNoReservedKeys0 {
reserved?: unknown[]
groups?: unknown[]
}
type VueNoReservedKeys = [_VueNoReservedKeys0]
// ----- vue/no-reserved-props -----
interface _VueNoReservedProps0 {
vueVersion?: (2 | 3)
}
type VueNoReservedProps = [_VueNoReservedProps0]
// ----- vue/no-restricted-block -----
type VueNoRestrictedBlock = (string | {
element: string
message?: string
})[]
type VueNoRestrictedBlock = VueNoRestrictedBlock[]
// ----- vue/no-restricted-call-after-await -----
type VueNoRestrictedCallAfterAwait = {
module: string
path?: (string | string[])
message?: string
}[]
type VueNoRestrictedCallAfterAwait = VueNoRestrictedCallAfterAwait[]
// ----- vue/no-restricted-class -----
type VueNoRestrictedClass = string[]
type VueNoRestrictedClass = VueNoRestrictedClass[]
// ----- vue/no-restricted-component-names -----
type VueNoRestrictedComponentNames = (string | {
name: string
message?: string
suggest?: string
})[]
type VueNoRestrictedComponentNames = VueNoRestrictedComponentNames[]
// ----- vue/no-restricted-component-options -----
type VueNoRestrictedComponentOptions = (string | string[] | {
name: (string | string[])
message?: string
})[]
type VueNoRestrictedComponentOptions = VueNoRestrictedComponentOptions[]
// ----- vue/no-restricted-custom-event -----
type VueNoRestrictedCustomEvent = (string | {
event: string
message?: string
suggest?: string
})[]
type VueNoRestrictedCustomEvent = VueNoRestrictedCustomEvent[]
// ----- vue/no-restricted-html-elements -----
type VueNoRestrictedHtmlElements = (string | {
element: string
message?: string
})[]
type VueNoRestrictedHtmlElements = VueNoRestrictedHtmlElements[]
// ----- vue/no-restricted-props -----
type VueNoRestrictedProps = (string | {
name: string
message?: string
suggest?: string
})[]
type VueNoRestrictedProps = VueNoRestrictedProps[]
// ----- vue/no-restricted-static-attribute -----
type VueNoRestrictedStaticAttribute = (string | {
key: string
value?: (string | true)
element?: string
message?: string
})[]
type VueNoRestrictedStaticAttribute = VueNoRestrictedStaticAttribute[]
// ----- vue/no-restricted-syntax -----
type VueNoRestrictedSyntax = (string | {
selector: string
message?: string
})[]
type VueNoRestrictedSyntax = VueNoRestrictedSyntax[]
// ----- vue/no-restricted-v-bind -----
type VueNoRestrictedVBind = ((string | null) | {
argument: (string | null)
modifiers?: ("prop" | "camel" | "sync" | "attr")[]
element?: string
message?: string
})[]
type VueNoRestrictedVBind = VueNoRestrictedVBind[]
// ----- vue/no-restricted-v-on -----
type VueNoRestrictedVOn = ((string | null) | {
argument: (string | null)
element?: string
message?: string
modifiers?: [("prevent" | "stop" | "capture" | "self" | "once" | "passive"), ...(("prevent" | "stop" | "capture" | "self" | "once" | "passive"))[]]
})[]
type VueNoRestrictedVOn = VueNoRestrictedVOn[]
// ----- vue/no-static-inline-styles -----
interface _VueNoStaticInlineStyles0 {
allowBinding?: boolean
}
type VueNoStaticInlineStyles = [_VueNoStaticInlineStyles0]
// ----- vue/no-template-shadow -----
interface _VueNoTemplateShadow0 {
allow?: string[]
}
type VueNoTemplateShadow = [_VueNoTemplateShadow0]
// ----- vue/no-template-target-blank -----
interface _VueNoTemplateTargetBlank0 {
allowReferrer?: boolean
enforceDynamicLinks?: ("always" | "never")
}
type VueNoTemplateTargetBlank = [_VueNoTemplateTargetBlank0]
// ----- vue/no-undef-components -----
interface _VueNoUndefComponents0 {
ignorePatterns?: unknown[]
}
type VueNoUndefComponents = [_VueNoUndefComponents0]
// ----- vue/no-undef-properties -----
interface _VueNoUndefProperties0 {
ignores?: string[]
}
type VueNoUndefProperties = [_VueNoUndefProperties0]
// ----- vue/no-unsupported-features -----
interface _VueNoUnsupportedFeatures0 {
version?: string
ignores?: ("slot-scope-attribute" | "dynamic-directive-arguments" | "v-slot" | "script-setup" | "style-css-vars-injection" | "v-model-argument" | "v-model-custom-modifiers" | "v-is" | "is-attribute-with-vue-prefix" | "v-memo" | "v-bind-prop-modifier-shorthand" | "v-bind-attr-modifier" | "define-options" | "define-slots" | "define-model" | "v-bind-same-name-shorthand")[]
}
type VueNoUnsupportedFeatures = [_VueNoUnsupportedFeatures0]
// ----- vue/no-unused-components -----
interface _VueNoUnusedComponents0 {
ignoreWhenBindingPresent?: boolean
}
type VueNoUnusedComponents = [_VueNoUnusedComponents0]
// ----- vue/no-unused-properties -----
interface _VueNoUnusedProperties0 {
groups?: ("props" | "data" | "asyncData" | "computed" | "methods" | "setup")[]
deepData?: boolean
ignorePublicMembers?: boolean
unreferencedOptions?: ("unknownMemberAsUnreferenced" | "returnAsUnreferenced")[]
}
type VueNoUnusedProperties = [_VueNoUnusedProperties0]
// ----- vue/no-unused-vars -----
interface _VueNoUnusedVars0 {
ignorePattern?: string
}
type VueNoUnusedVars = [_VueNoUnusedVars0]
// ----- vue/no-use-v-if-with-v-for -----
interface _VueNoUseVIfWithVFor0 {
allowUsingIterationVar?: boolean
}
type VueNoUseVIfWithVFor = [_VueNoUseVIfWithVFor0]
// ----- vue/no-useless-mustaches -----
interface _VueNoUselessMustaches0 {
ignoreIncludesComment?: boolean
ignoreStringEscape?: boolean
}
type VueNoUselessMustaches = [_VueNoUselessMustaches0]
// ----- vue/no-useless-v-bind -----
interface _VueNoUselessVBind0 {
ignoreIncludesComment?: boolean
ignoreStringEscape?: boolean
}
type VueNoUselessVBind = [_VueNoUselessVBind0]
// ----- vue/no-v-text-v-html-on-component -----
interface _VueNoVTextVHtmlOnComponent0 {
allow?: string[]
}
type VueNoVTextVHtmlOnComponent = [_VueNoVTextVHtmlOnComponent0]
// ----- vue/object-curly-newline -----
type _VueObjectCurlyNewline0 = ((("always" | "never") | {
multiline?: boolean
minProperties?: number
consistent?: boolean
}) | {
ObjectExpression?: (("always" | "never") | {
multiline?: boolean
minProperties?: number
consistent?: boolean
})
ObjectPattern?: (("always" | "never") | {
multiline?: boolean
minProperties?: number
consistent?: boolean
})
ImportDeclaration?: (("always" | "never") | {
multiline?: boolean
minProperties?: number
consistent?: boolean
})
ExportDeclaration?: (("always" | "never") | {
multiline?: boolean
minProperties?: number
consistent?: boolean
})
})
type VueObjectCurlyNewline = [_VueObjectCurlyNewline0]
// ----- vue/object-curly-spacing -----
type _VueObjectCurlySpacing0 = ("always" | "never")
interface _VueObjectCurlySpacing1 {
arraysInObjects?: boolean
objectsInObjects?: boolean
}
type VueObjectCurlySpacing = [_VueObjectCurlySpacing0, _VueObjectCurlySpacing1]
// ----- vue/object-property-newline -----
interface _VueObjectPropertyNewline0 {
allowAllPropertiesOnSameLine?: boolean
allowMultiplePropertiesPerLine?: boolean
}
type VueObjectPropertyNewline = [_VueObjectPropertyNewline0]
// ----- vue/object-shorthand -----
type VueObjectShorthand = ([]|[("always" | "methods" | "properties" | "never" | "consistent" | "consistent-as-needed")] | []|[("always" | "methods" | "properties")]|[("always" | "methods" | "properties"), {
avoidQuotes?: boolean
}] | []|[("always" | "methods")]|[("always" | "methods"), {
ignoreConstructors?: boolean
methodsIgnorePattern?: string
avoidQuotes?: boolean
avoidExplicitReturnArrows?: boolean
}])
type VueObjectShorthand = VueObjectShorthand[]
// ----- vue/operator-linebreak -----
type _VueOperatorLinebreak0 = (("after" | "before" | "none") | null)
interface _VueOperatorLinebreak1 {
overrides?: {
[k: string]: ("after" | "before" | "none" | "ignore")
}
}
type VueOperatorLinebreak = [_VueOperatorLinebreak0, _VueOperatorLinebreak1]
// ----- vue/order-in-components -----
interface _VueOrderInComponents0 {
order?: unknown[]
}
type VueOrderInComponents = [_VueOrderInComponents0]
// ----- vue/padding-line-between-blocks -----
type _VuePaddingLineBetweenBlocks0 = ("never" | "always")
type VuePaddingLineBetweenBlocks = [_VuePaddingLineBetweenBlocks0]
// ----- vue/padding-line-between-tags -----
type _VuePaddingLineBetweenTags0 = {
blankLine: ("always" | "never" | "consistent")
prev: string
next: string
}[]
type VuePaddingLineBetweenTags = [_VuePaddingLineBetweenTags0]
// ----- vue/padding-lines-in-component-definition -----
type _VuePaddingLinesInComponentDefinition0 = (("always" | "never") | {
betweenOptions?: ("never" | "always" | "ignore")
withinOption?: (("never" | "always" | "ignore") | {
[k: string]: (("never" | "always" | "ignore") | {
betweenItems?: ("never" | "always" | "ignore")
withinEach?: ("never" | "always" | "ignore")
})
})
groupSingleLineProperties?: boolean
})
type VuePaddingLinesInComponentDefinition = [_VuePaddingLinesInComponentDefinition0]
// ----- vue/prefer-true-attribute-shorthand -----
type _VuePreferTrueAttributeShorthand0 = ("always" | "never")
type VuePreferTrueAttributeShorthand = [_VuePreferTrueAttributeShorthand0]
// ----- vue/prop-name-casing -----
type _VuePropNameCasing0 = ("camelCase" | "snake_case")
type VuePropNameCasing = [_VuePropNameCasing0]
// ----- vue/quote-props -----
type VueQuoteProps = ([]|[("always" | "as-needed" | "consistent" | "consistent-as-needed")] | []|[("always" | "as-needed" | "consistent" | "consistent-as-needed")]|[("always" | "as-needed" | "consistent" | "consistent-as-needed"), {
keywords?: boolean
unnecessary?: boolean
numbers?: boolean
}])
type VueQuoteProps = VueQuoteProps[]
// ----- vue/require-direct-export -----
interface _VueRequireDirectExport0 {
disallowFunctionalComponentFunction?: boolean
}
type VueRequireDirectExport = [_VueRequireDirectExport0]
// ----- vue/require-explicit-emits -----
interface _VueRequireExplicitEmits0 {
allowProps?: boolean
}
type VueRequireExplicitEmits = [_VueRequireExplicitEmits0]
// ----- vue/require-macro-variable-name -----
interface _VueRequireMacroVariableName0 {
defineProps?: string
defineEmits?: string
defineSlots?: string
useSlots?: string
useAttrs?: string
}
type VueRequireMacroVariableName = [_VueRequireMacroVariableName0]
// ----- vue/require-prop-comment -----
interface _VueRequirePropComment0 {
type?: ("JSDoc" | "line" | "block" | "any")
}
type VueRequirePropComment = [_VueRequirePropComment0]
// ----- vue/return-in-computed-property -----
interface _VueReturnInComputedProperty0 {
treatUndefinedAsUnspecified?: boolean
}
type VueReturnInComputedProperty = [_VueReturnInComputedProperty0]
// ----- vue/script-indent -----
type _VueScriptIndent0 = (number | "tab")
interface _VueScriptIndent1 {
baseIndent?: number
switchCase?: number
ignores?: (string & {
[k: string]: unknown
} & {
[k: string]: unknown
})[]
}
type VueScriptIndent = [_VueScriptIndent0, _VueScriptIndent1]
// ----- vue/singleline-html-element-content-newline -----
interface _VueSinglelineHtmlElementContentNewline0 {
ignoreWhenNoAttributes?: boolean
ignoreWhenEmpty?: boolean
ignores?: string[]
externalIgnores?: string[]
}
type VueSinglelineHtmlElementContentNewline = [_VueSinglelineHtmlElementContentNewline0]
// ----- vue/sort-keys -----
type _VueSortKeys0 = ("asc" | "desc")
interface _VueSortKeys1 {
caseSensitive?: boolean
ignoreChildrenOf?: unknown[]
ignoreGrandchildrenOf?: unknown[]
minKeys?: number
natural?: boolean
runOutsideVue?: boolean
}
type VueSortKeys = [_VueSortKeys0, _VueSortKeys1]
// ----- vue/space-in-parens -----
type _VueSpaceInParens0 = ("always" | "never")
interface _VueSpaceInParens1 {
exceptions?: ("{}" | "[]" | "()" | "empty")[]
}
type VueSpaceInParens = [_VueSpaceInParens0, _VueSpaceInParens1]
// ----- vue/space-infix-ops -----
interface _VueSpaceInfixOps0 {
int32Hint?: boolean
}
type VueSpaceInfixOps = [_VueSpaceInfixOps0]
// ----- vue/space-unary-ops -----
interface _VueSpaceUnaryOps0 {
words?: boolean
nonwords?: boolean
overrides?: {
[k: string]: boolean
}
}
type VueSpaceUnaryOps = [_VueSpaceUnaryOps0]
// ----- vue/template-curly-spacing -----
type _VueTemplateCurlySpacing0 = ("always" | "never")
type VueTemplateCurlySpacing = [_VueTemplateCurlySpacing0]
// ----- vue/this-in-template -----
type _VueThisInTemplate0 = ("always" | "never")
type VueThisInTemplate = [_VueThisInTemplate0]
// ----- vue/v-bind-style -----
type _VueVBindStyle0 = ("shorthand" | "longform")
interface _VueVBindStyle1 {
sameNameShorthand?: ("always" | "never" | "ignore")
}
type VueVBindStyle = [_VueVBindStyle0, _VueVBindStyle1]
// ----- vue/v-for-delimiter-style -----
type _VueVForDelimiterStyle0 = ("in" | "of")
type VueVForDelimiterStyle = [_VueVForDelimiterStyle0]
// ----- vue/v-on-event-hyphenation -----
type _VueVOnEventHyphenation0 = ("always" | "never")
interface _VueVOnEventHyphenation1 {
autofix?: boolean
ignore?: (string & {
[k: string]: unknown
} & {
[k: string]: unknown
})[]
}
type VueVOnEventHyphenation = [_VueVOnEventHyphenation0, _VueVOnEventHyphenation1]
// ----- vue/v-on-function-call -----
type _VueVOnFunctionCall0 = ("always" | "never")
interface _VueVOnFunctionCall1 {
ignoreIncludesComment?: boolean
}
type VueVOnFunctionCall = [_VueVOnFunctionCall0, _VueVOnFunctionCall1]
// ----- vue/v-on-handler-style -----
type _VueVOnHandlerStyle0 = (("inline" | "inline-function") | ["method", ("inline" | "inline-function")])
interface _VueVOnHandlerStyle1 {
ignoreIncludesComment?: boolean
}
type VueVOnHandlerStyle = [_VueVOnHandlerStyle0, _VueVOnHandlerStyle1]
// ----- vue/v-on-style -----
type _VueVOnStyle0 = ("shorthand" | "longform")
type VueVOnStyle = [_VueVOnStyle0]
// ----- vue/v-slot-style -----
type _VueVSlotStyle0 = (("shorthand" | "longform") | {
atComponent?: ("shorthand" | "longform" | "v-slot")
default?: ("shorthand" | "longform" | "v-slot")
named?: ("shorthand" | "longform")
})
type VueVSlotStyle = [_VueVSlotStyle0]
// ----- vue/valid-v-on -----
interface _VueValidVOn0 {
modifiers?: unknown[]
}
type VueValidVOn = [_VueValidVOn0]
// ----- vue/valid-v-slot -----
interface _VueValidVSlot0 {
allowModifiers?: boolean
}
type VueValidVSlot = [_VueValidVSlot0]"
`;

exports[`pluginsToRuleOptions 1`] = `
"/* eslint-disable */
/* prettier-ignore */
import type { Linter } from 'eslint'

export interface RuleOptions {
  /**
   * Enforce or ban the use of inline type-only markers for named imports.
   * @see https://github.com/un-ts/eslint-plugin-import-x/blob/v0.4.4/docs/rules/consistent-type-specifier-style.md
   */
  'import/consistent-type-specifier-style'?: Linter.RuleEntry<ImportConsistentTypeSpecifierStyle>
  'import/default'?: Linter.RuleEntry<[]>
  /**
   * Enforce a leading comment with the webpackChunkName for dynamic imports.
   * @see https://github.com/un-ts/eslint-plugin-import-x/blob/v0.4.4/docs/rules/dynamic-import-chunkname.md
   */
  'import/dynamic-import-chunkname'?: Linter.RuleEntry<ImportDynamicImportChunkname>
  'import/export'?: Linter.RuleEntry<[]>
  'import/exports-last'?: Linter.RuleEntry<[]>
  /**
   * Ensure consistent use of file extension within the import path.
   * @see https://github.com/un-ts/eslint-plugin-import-x/blob/v0.4.4/docs/rules/extensions.md
   */
  'import/extensions'?: Linter.RuleEntry<ImportExtensions>
  /**
   * Ensure all imports appear before other statements.
   * @see https://github.com/un-ts/eslint-plugin-import-x/blob/v0.4.4/docs/rules/first.md
   */
  'import/first'?: Linter.RuleEntry<ImportFirst>
  /**
   * Prefer named exports to be grouped together in a single export declaration.
   * @see https://github.com/un-ts/eslint-plugin-import-x/blob/v0.4.4/docs/rules/group-exports.md
   */
  'import/group-exports'?: Linter.RuleEntry<ImportGroupExports>
  /**
   * Replaced by \`import-x/first\`.
   * @see https://github.com/un-ts/eslint-plugin-import-x/blob/7b25c1cb95ee18acc1531002fd343e1e6031f9ed/docs/rules/imports-first.md
   * @deprecated
   */
  'import/imports-first'?: Linter.RuleEntry<ImportImportsFirst>
  /**
   * Enforce the maximum number of dependencies a module can have.
   * @see https://github.com/un-ts/eslint-plugin-import-x/blob/v0.4.4/docs/rules/max-dependencies.md
   */
  'import/max-dependencies'?: Linter.RuleEntry<ImportMaxDependencies>
  /**
   * Ensure named imports correspond to a named export in the remote file.
   * @see https://github.com/un-ts/eslint-plugin-import-x/blob/v0.4.4/docs/rules/named.md
   */
  'import/named'?: Linter.RuleEntry<ImportNamed>
  /**
   * Ensure imported namespaces contain dereferenced properties as they are dereferenced.
   * @see https://github.com/un-ts/eslint-plugin-import-x/blob/v0.4.4/docs/rules/namespace.md
   */
  'import/namespace'?: Linter.RuleEntry<ImportNamespace>
  /**
   * Enforce a newline after import statements.
   * @see https://github.com/un-ts/eslint-plugin-import-x/blob/v0.4.4/docs/rules/newline-after-import.md
   */
  'import/newline-after-import'?: Linter.RuleEntry<ImportNewlineAfterImport>
  /**
   * Forbid import of modules using absolute paths.
   * @see https://github.com/un-ts/eslint-plugin-import-x/blob/v0.4.4/docs/rules/no-absolute-path.md
   */
  'import/no-absolute-path'?: Linter.RuleEntry<ImportNoAbsolutePath>
  'import/no-amd'?: Linter.RuleEntry<[]>
  /**
   * Forbid anonymous values as default exports.
   * @see https://github.com/un-ts/eslint-plugin-import-x/blob/v0.4.4/docs/rules/no-anonymous-default-export.md
   */
  'import/no-anonymous-default-export'?: Linter.RuleEntry<ImportNoAnonymousDefaultExport>
  /**
   * Forbid CommonJS \`require\` calls and \`module.exports\` or \`exports.*\`.
   * @see https://github.com/un-ts/eslint-plugin-import-x/blob/v0.4.4/docs/rules/no-commonjs.md
   */
  'import/no-commonjs'?: Linter.RuleEntry<ImportNoCommonjs>
  /**
   * Forbid a module from importing a module with a dependency path back to itself.
   * @see https://github.com/un-ts/eslint-plugin-import-x/blob/v0.4.4/docs/rules/no-cycle.md
   */
  'import/no-cycle'?: Linter.RuleEntry<ImportNoCycle>
  'import/no-default-export'?: Linter.RuleEntry<[]>
  'import/no-deprecated'?: Linter.RuleEntry<[]>
  /**
   * Forbid repeated import of the same module in multiple places.
   * @see https://github.com/un-ts/eslint-plugin-import-x/blob/v0.4.4/docs/rules/no-duplicates.md
   */
  'import/no-duplicates'?: Linter.RuleEntry<ImportNoDuplicates>
  /**
   * Forbid \`require()\` calls with expressions.
   * @see https://github.com/un-ts/eslint-plugin-import-x/blob/v0.4.4/docs/rules/no-dynamic-require.md
   */
  'import/no-dynamic-require'?: Linter.RuleEntry<ImportNoDynamicRequire>
  'import/no-empty-named-blocks'?: Linter.RuleEntry<[]>
  /**
   * Forbid the use of extraneous packages.
   * @see https://github.com/un-ts/eslint-plugin-import-x/blob/v0.4.4/docs/rules/no-extraneous-dependencies.md
   */
  'import/no-extraneous-dependencies'?: Linter.RuleEntry<ImportNoExtraneousDependencies>
  /**
   * Forbid import statements with CommonJS module.exports.
   * @see https://github.com/un-ts/eslint-plugin-import-x/blob/v0.4.4/docs/rules/no-import-module-exports.md
   */
  'import/no-import-module-exports'?: Linter.RuleEntry<ImportNoImportModuleExports>
  /**
   * Forbid importing the submodules of other modules.
   * @see https://github.com/un-ts/eslint-plugin-import-x/blob/v0.4.4/docs/rules/no-internal-modules.md
   */
  'import/no-internal-modules'?: Linter.RuleEntry<ImportNoInternalModules>
  'import/no-mutable-exports'?: Linter.RuleEntry<[]>
  'import/no-named-as-default'?: Linter.RuleEntry<[]>
  'import/no-named-as-default-member'?: Linter.RuleEntry<[]>
  'import/no-named-default'?: Linter.RuleEntry<[]>
  'import/no-named-export'?: Linter.RuleEntry<[]>
  /**
   * Forbid namespace (a.k.a. "wildcard" \`*\`) imports.
   * @see https://github.com/un-ts/eslint-plugin-import-x/blob/v0.4.4/docs/rules/no-namespace.md
   */
  'import/no-namespace'?: Linter.RuleEntry<ImportNoNamespace>
  /**
   * Forbid Node.js builtin modules.
   * @see https://github.com/un-ts/eslint-plugin-import-x/blob/v0.4.4/docs/rules/no-nodejs-modules.md
   */
  'import/no-nodejs-modules'?: Linter.RuleEntry<ImportNoNodejsModules>
  /**
   * Forbid importing packages through relative paths.
   * @see https://github.com/un-ts/eslint-plugin-import-x/blob/v0.4.4/docs/rules/no-relative-packages.md
   */
  'import/no-relative-packages'?: Linter.RuleEntry<ImportNoRelativePackages>
  /**
   * Forbid importing modules from parent directories.
   * @see https://github.com/un-ts/eslint-plugin-import-x/blob/v0.4.4/docs/rules/no-relative-parent-imports.md
   */
  'import/no-relative-parent-imports'?: Linter.RuleEntry<ImportNoRelativeParentImports>
  /**
   * Enforce which files can be imported in a given folder.
   * @see https://github.com/un-ts/eslint-plugin-import-x/blob/v0.4.4/docs/rules/no-restricted-paths.md
   */
  'import/no-restricted-paths'?: Linter.RuleEntry<ImportNoRestrictedPaths>
  'import/no-self-import'?: Linter.RuleEntry<[]>
  /**
   * Forbid unassigned imports.
   * @see https://github.com/un-ts/eslint-plugin-import-x/blob/v0.4.4/docs/rules/no-unassigned-import.md
   */
  'import/no-unassigned-import'?: Linter.RuleEntry<ImportNoUnassignedImport>
  /**
   * Ensure imports point to a file/module that can be resolved.
   * @see https://github.com/un-ts/eslint-plugin-import-x/blob/v0.4.4/docs/rules/no-unresolved.md
   */
  'import/no-unresolved'?: Linter.RuleEntry<ImportNoUnresolved>
  /**
   * Forbid modules without exports, or exports without matching import in another module.
   * @see https://github.com/un-ts/eslint-plugin-import-x/blob/v0.4.4/docs/rules/no-unused-modules.md
   */
  'import/no-unused-modules'?: Linter.RuleEntry<ImportNoUnusedModules>
  /**
   * Forbid unnecessary path segments in import and require statements.
   * @see https://github.com/un-ts/eslint-plugin-import-x/blob/v0.4.4/docs/rules/no-useless-path-segments.md
   */
  'import/no-useless-path-segments'?: Linter.RuleEntry<ImportNoUselessPathSegments>
  'import/no-webpack-loader-syntax'?: Linter.RuleEntry<[]>
  /**
   * Enforce a convention in module import order.
   * @see https://github.com/un-ts/eslint-plugin-import-x/blob/v0.4.4/docs/rules/order.md
   */
  'import/order'?: Linter.RuleEntry<ImportOrder>
  /**
   * Prefer a default export if module exports a single name or multiple names.
   * @see https://github.com/un-ts/eslint-plugin-import-x/blob/v0.4.4/docs/rules/prefer-default-export.md
   */
  'import/prefer-default-export'?: Linter.RuleEntry<ImportPreferDefaultExport>
  'import/unambiguous'?: Linter.RuleEntry<[]>
  /**
   * require \`return\` statements after callbacks
   * @see https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/callback-return.md
   */
  'node/callback-return'?: Linter.RuleEntry<NodeCallbackReturn>
  /**
   * enforce either \`module.exports\` or \`exports\`
   * @see https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/exports-style.md
   */
  'node/exports-style'?: Linter.RuleEntry<NodeExportsStyle>
  /**
   * enforce the style of file extensions in \`import\` declarations
   * @see https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/file-extension-in-import.md
   */
  'node/file-extension-in-import'?: Linter.RuleEntry<NodeFileExtensionInImport>
  'node/global-require'?: Linter.RuleEntry<[]>
  /**
   * require error handling in callbacks
   * @see https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/handle-callback-err.md
   */
  'node/handle-callback-err'?: Linter.RuleEntry<NodeHandleCallbackErr>
  'node/no-callback-literal'?: Linter.RuleEntry<[]>
  /**
   * disallow deprecated APIs
   * @see https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-deprecated-api.md
   */
  'node/no-deprecated-api'?: Linter.RuleEntry<NodeNoDeprecatedApi>
  'node/no-exports-assign'?: Linter.RuleEntry<[]>
  /**
   * disallow \`import\` declarations which import extraneous modules
   * @see https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-extraneous-import.md
   */
  'node/no-extraneous-import'?: Linter.RuleEntry<NodeNoExtraneousImport>
  /**
   * disallow \`require()\` expressions which import extraneous modules
   * @see https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-extraneous-require.md
   */
  'node/no-extraneous-require'?: Linter.RuleEntry<NodeNoExtraneousRequire>
  /**
   * disallow third-party modules which are hiding core modules
   * @see https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-hide-core-modules.md
   * @deprecated
   */
  'node/no-hide-core-modules'?: Linter.RuleEntry<NodeNoHideCoreModules>
  /**
   * disallow \`import\` declarations which import non-existence modules
   * @see https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-missing-import.md
   */
  'node/no-missing-import'?: Linter.RuleEntry<NodeNoMissingImport>
  /**
   * disallow \`require()\` expressions which import non-existence modules
   * @see https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-missing-require.md
   */
  'node/no-missing-require'?: Linter.RuleEntry<NodeNoMissingRequire>
  /**
   * disallow \`require\` calls to be mixed with regular variable declarations
   * @see https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-mixed-requires.md
   */
  'node/no-mixed-requires'?: Linter.RuleEntry<NodeNoMixedRequires>
  'node/no-new-require'?: Linter.RuleEntry<[]>
  'node/no-path-concat'?: Linter.RuleEntry<[]>
  'node/no-process-env'?: Linter.RuleEntry<[]>
  'node/no-process-exit'?: Linter.RuleEntry<[]>
  /**
   * disallow specified modules when loaded by \`import\` declarations
   * @see https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-restricted-import.md
   */
  'node/no-restricted-import'?: Linter.RuleEntry<NodeNoRestrictedImport>
  /**
   * disallow specified modules when loaded by \`require\`
   * @see https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-restricted-require.md
   */
  'node/no-restricted-require'?: Linter.RuleEntry<NodeNoRestrictedRequire>
  /**
   * disallow synchronous methods
   * @see https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-sync.md
   */
  'node/no-sync'?: Linter.RuleEntry<NodeNoSync>
  /**
   * disallow \`bin\` files that npm ignores
   * @see https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-unpublished-bin.md
   */
  'node/no-unpublished-bin'?: Linter.RuleEntry<NodeNoUnpublishedBin>
  /**
   * disallow \`import\` declarations which import private modules
   * @see https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-unpublished-import.md
   */
  'node/no-unpublished-import'?: Linter.RuleEntry<NodeNoUnpublishedImport>
  /**
   * disallow \`require()\` expressions which import private modules
   * @see https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-unpublished-require.md
   */
  'node/no-unpublished-require'?: Linter.RuleEntry<NodeNoUnpublishedRequire>
  /**
   * disallow unsupported ECMAScript features on the specified version
   * @see https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-unsupported-features.md
   * @deprecated
   */
  'node/no-unsupported-features'?: Linter.RuleEntry<NodeNoUnsupportedFeatures>
  /**
   * disallow unsupported ECMAScript built-ins on the specified version
   * @see https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-unsupported-features/es-builtins.md
   */
  'node/no-unsupported-features/es-builtins'?: Linter.RuleEntry<NodeNoUnsupportedFeaturesEsBuiltins>
  /**
   * disallow unsupported ECMAScript syntax on the specified version
   * @see https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-unsupported-features/es-syntax.md
   */
  'node/no-unsupported-features/es-syntax'?: Linter.RuleEntry<NodeNoUnsupportedFeaturesEsSyntax>
  /**
   * disallow unsupported Node.js built-in APIs on the specified version
   * @see https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-unsupported-features/node-builtins.md
   */
  'node/no-unsupported-features/node-builtins'?: Linter.RuleEntry<NodeNoUnsupportedFeaturesNodeBuiltins>
  /**
   * enforce either \`Buffer\` or \`require("buffer").Buffer\`
   * @see https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/prefer-global/buffer.md
   */
  'node/prefer-global/buffer'?: Linter.RuleEntry<NodePreferGlobalBuffer>
  /**
   * enforce either \`console\` or \`require("console")\`
   * @see https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/prefer-global/console.md
   */
  'node/prefer-global/console'?: Linter.RuleEntry<NodePreferGlobalConsole>
  /**
   * enforce either \`process\` or \`require("process")\`
   * @see https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/prefer-global/process.md
   */
  'node/prefer-global/process'?: Linter.RuleEntry<NodePreferGlobalProcess>
  /**
   * enforce either \`TextDecoder\` or \`require("util").TextDecoder\`
   * @see https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/prefer-global/text-decoder.md
   */
  'node/prefer-global/text-decoder'?: Linter.RuleEntry<NodePreferGlobalTextDecoder>
  /**
   * enforce either \`TextEncoder\` or \`require("util").TextEncoder\`
   * @see https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/prefer-global/text-encoder.md
   */
  'node/prefer-global/text-encoder'?: Linter.RuleEntry<NodePreferGlobalTextEncoder>
  /**
   * enforce either \`URL\` or \`require("url").URL\`
   * @see https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/prefer-global/url.md
   */
  'node/prefer-global/url'?: Linter.RuleEntry<NodePreferGlobalUrl>
  /**
   * enforce either \`URLSearchParams\` or \`require("url").URLSearchParams\`
   * @see https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/prefer-global/url-search-params.md
   */
  'node/prefer-global/url-search-params'?: Linter.RuleEntry<NodePreferGlobalUrlSearchParams>
  'node/prefer-promises/dns'?: Linter.RuleEntry<[]>
  'node/prefer-promises/fs'?: Linter.RuleEntry<[]>
  'node/process-exit-as-throw'?: Linter.RuleEntry<[]>
  /**
   * require correct usage of shebang
   * @see https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/shebang.md
   */
  'node/shebang'?: Linter.RuleEntry<NodeShebang>
}

/* ======= Declarations ======= */
// ----- import/consistent-type-specifier-style -----
type _ImportConsistentTypeSpecifierStyle0 = ("prefer-inline" | "prefer-top-level")
type ImportConsistentTypeSpecifierStyle = [_ImportConsistentTypeSpecifierStyle0]
// ----- import/dynamic-import-chunkname -----
interface _ImportDynamicImportChunkname0 {
importFunctions?: string[]
allowEmpty?: boolean
webpackChunknameFormat?: string
[k: string]: unknown
}
type ImportDynamicImportChunkname = [_ImportDynamicImportChunkname0]
// ----- import/extensions -----
type ImportExtensions = ([]|[("always" | "ignorePackages" | "never")] | []|[("always" | "ignorePackages" | "never")]|[("always" | "ignorePackages" | "never"), {
pattern?: {
[k: string]: ("always" | "ignorePackages" | "never")
}
ignorePackages?: boolean
[k: string]: unknown
}] | []|[{
pattern?: {
[k: string]: ("always" | "ignorePackages" | "never")
}
ignorePackages?: boolean
[k: string]: unknown
}] | []|[{
[k: string]: ("always" | "ignorePackages" | "never")
}] | []|[("always" | "ignorePackages" | "never")]|[("always" | "ignorePackages" | "never"), {
[k: string]: ("always" | "ignorePackages" | "never")
}])
type ImportExtensions = ImportExtensions[]
// ----- import/first -----
type _ImportFirst0 = ("absolute-first" | "disable-absolute-first")
type ImportFirst = [_ImportFirst0]
// ----- import/group-exports -----
interface ImportGroupExports {
[k: string]: unknown
}
type ImportGroupExports = ImportGroupExports[]
// ----- import/imports-first -----
type _ImportImportsFirst0 = ("absolute-first" | "disable-absolute-first")
type ImportImportsFirst = [_ImportImportsFirst0]
// ----- import/max-dependencies -----
interface _ImportMaxDependencies0 {
max?: number
ignoreTypeImports?: boolean
}
type ImportMaxDependencies = [_ImportMaxDependencies0]
// ----- import/named -----
interface _ImportNamed0 {
commonjs?: boolean
}
type ImportNamed = [_ImportNamed0]
// ----- import/namespace -----
interface _ImportNamespace0 {
allowComputed?: boolean
}
type ImportNamespace = [_ImportNamespace0]
// ----- import/newline-after-import -----
interface _ImportNewlineAfterImport0 {
count?: number
exactCount?: boolean
considerComments?: boolean
}
type ImportNewlineAfterImport = [_ImportNewlineAfterImport0]
// ----- import/no-absolute-path -----
interface _ImportNoAbsolutePath0 {
commonjs?: boolean
amd?: boolean
esmodule?: boolean
ignore?: [string, ...(string)[]]
}
type ImportNoAbsolutePath = [_ImportNoAbsolutePath0]
// ----- import/no-anonymous-default-export -----
interface _ImportNoAnonymousDefaultExport0 {
allowArray?: boolean
allowArrowFunction?: boolean
allowCallExpression?: boolean
allowAnonymousClass?: boolean
allowAnonymousFunction?: boolean
allowLiteral?: boolean
allowObject?: boolean
allowNew?: boolean
}
type ImportNoAnonymousDefaultExport = [_ImportNoAnonymousDefaultExport0]
// ----- import/no-commonjs -----
type ImportNoCommonjs = ([]|["allow-primitive-modules"] | []|[{
allowPrimitiveModules?: boolean
allowRequire?: boolean
allowConditionalRequire?: boolean
}])
type ImportNoCommonjs = ImportNoCommonjs[]
// ----- import/no-cycle -----
interface _ImportNoCycle0 {
commonjs?: boolean
amd?: boolean
esmodule?: boolean
ignore?: [string, ...(string)[]]
maxDepth?: (number | "∞")
ignoreExternal?: boolean
allowUnsafeDynamicCyclicDependency?: boolean
}
type ImportNoCycle = [_ImportNoCycle0]
// ----- import/no-duplicates -----
interface _ImportNoDuplicates0 {
considerQueryString?: boolean
"prefer-inline"?: boolean
}
type ImportNoDuplicates = [_ImportNoDuplicates0]
// ----- import/no-dynamic-require -----
interface _ImportNoDynamicRequire0 {
esmodule?: boolean
}
type ImportNoDynamicRequire = [_ImportNoDynamicRequire0]
// ----- import/no-extraneous-dependencies -----
interface _ImportNoExtraneousDependencies0 {
devDependencies?: (boolean | unknown[])
optionalDependencies?: (boolean | unknown[])
peerDependencies?: (boolean | unknown[])
bundledDependencies?: (boolean | unknown[])
packageDir?: (string | unknown[])
includeInternal?: boolean
includeTypes?: boolean
}
type ImportNoExtraneousDependencies = [_ImportNoExtraneousDependencies0]
// ----- import/no-import-module-exports -----
interface _ImportNoImportModuleExports0 {
exceptions?: unknown[]
}
type ImportNoImportModuleExports = [_ImportNoImportModuleExports0]
// ----- import/no-internal-modules -----
type _ImportNoInternalModules0 = ({
allow?: string[]
} | {
forbid?: string[]
})
type ImportNoInternalModules = [_ImportNoInternalModules0]
// ----- import/no-namespace -----
interface _ImportNoNamespace0 {
ignore?: string[]
[k: string]: unknown
}
type ImportNoNamespace = [_ImportNoNamespace0]
// ----- import/no-nodejs-modules -----
interface _ImportNoNodejsModules0 {
allow?: string[]
}
type ImportNoNodejsModules = [_ImportNoNodejsModules0]
// ----- import/no-relative-packages -----
interface _ImportNoRelativePackages0 {
commonjs?: boolean
amd?: boolean
esmodule?: boolean
ignore?: [string, ...(string)[]]
}
type ImportNoRelativePackages = [_ImportNoRelativePackages0]
// ----- import/no-relative-parent-imports -----
interface _ImportNoRelativeParentImports0 {
commonjs?: boolean
amd?: boolean
esmodule?: boolean
ignore?: [string, ...(string)[]]
}
type ImportNoRelativeParentImports = [_ImportNoRelativeParentImports0]
// ----- import/no-restricted-paths -----
interface _ImportNoRestrictedPaths0 {
zones?: [{
target?: (string | string[])
from?: (string | string[])
except?: string[]
message?: string
}, ...({
target?: (string | string[])
from?: (string | string[])
except?: string[]
message?: string
})[]]
basePath?: string
}
type ImportNoRestrictedPaths = [_ImportNoRestrictedPaths0]
// ----- import/no-unassigned-import -----
interface _ImportNoUnassignedImport0 {
devDependencies?: (boolean | unknown[])
optionalDependencies?: (boolean | unknown[])
peerDependencies?: (boolean | unknown[])
allow?: string[]
}
type ImportNoUnassignedImport = [_ImportNoUnassignedImport0]
// ----- import/no-unresolved -----
interface _ImportNoUnresolved0 {
commonjs?: boolean
amd?: boolean
esmodule?: boolean
ignore?: [string, ...(string)[]]
caseSensitive?: boolean
caseSensitiveStrict?: boolean
}
type ImportNoUnresolved = [_ImportNoUnresolved0]
// ----- import/no-unused-modules -----
type _ImportNoUnusedModules0 = (({
unusedExports: true
src?: {
[k: string]: unknown
}
[k: string]: unknown
} | {
missingExports: true
[k: string]: unknown
}) & {
src?: string[]
ignoreExports?: string[]
missingExports?: boolean
unusedExports?: boolean
[k: string]: unknown
})
type ImportNoUnusedModules = [_ImportNoUnusedModules0]
// ----- import/no-useless-path-segments -----
interface _ImportNoUselessPathSegments0 {
commonjs?: boolean
noUselessIndex?: boolean
}
type ImportNoUselessPathSegments = [_ImportNoUselessPathSegments0]
// ----- import/order -----
interface _ImportOrder0 {
groups?: unknown[]
pathGroupsExcludedImportTypes?: unknown[]
distinctGroup?: boolean
pathGroups?: {
pattern: string
patternOptions?: {
[k: string]: unknown
}
group: ("builtin" | "external" | "internal" | "unknown" | "parent" | "sibling" | "index" | "object" | "type")
position?: ("after" | "before")
}[]
"newlines-between"?: ("ignore" | "always" | "always-and-inside-groups" | "never")
alphabetize?: {
caseInsensitive?: boolean
order?: ("ignore" | "asc" | "desc")
orderImportKind?: ("ignore" | "asc" | "desc")
}
warnOnUnassignedImports?: boolean
}
type ImportOrder = [_ImportOrder0]
// ----- import/prefer-default-export -----
interface _ImportPreferDefaultExport0 {
target?: ("single" | "any")
}
type ImportPreferDefaultExport = [_ImportPreferDefaultExport0]
// ----- node/callback-return -----
type _NodeCallbackReturn0 = string[]
type NodeCallbackReturn = [_NodeCallbackReturn0]
// ----- node/exports-style -----
type _NodeExportsStyle0 = ("module.exports" | "exports")
interface _NodeExportsStyle1 {
allowBatchAssign?: boolean
}
type NodeExportsStyle = [_NodeExportsStyle0, _NodeExportsStyle1]
// ----- node/file-extension-in-import -----
type _NodeFileExtensionInImport0 = ("always" | "never")
interface _NodeFileExtensionInImport1 {
[k: string]: ("always" | "never")
}
type NodeFileExtensionInImport = [_NodeFileExtensionInImport0, _NodeFileExtensionInImport1]
// ----- node/handle-callback-err -----
type _NodeHandleCallbackErr0 = string
type NodeHandleCallbackErr = [_NodeHandleCallbackErr0]
// ----- node/no-deprecated-api -----
interface _NodeNoDeprecatedApi0 {
version?: string
ignoreModuleItems?: ("_linklist" | "_stream_wrap" | "async_hooks.currentId" | "async_hooks.triggerId" | "buffer.Buffer()" | "new buffer.Buffer()" | "buffer.SlowBuffer" | "constants" | "crypto._toBuf" | "crypto.Credentials" | "crypto.DEFAULT_ENCODING" | "crypto.createCipher" | "crypto.createCredentials" | "crypto.createDecipher" | "crypto.fips" | "crypto.prng" | "crypto.pseudoRandomBytes" | "crypto.rng" | "domain" | "events.EventEmitter.listenerCount" | "events.listenerCount" | "freelist" | "fs.SyncWriteStream" | "fs.exists" | "fs.lchmod" | "fs.lchmodSync" | "http.createClient" | "module.Module.createRequireFromPath" | "module.Module.requireRepl" | "module.Module._debug" | "module.createRequireFromPath" | "module.requireRepl" | "module._debug" | "net._setSimultaneousAccepts" | "os.getNetworkInterfaces" | "os.tmpDir" | "path._makeLong" | "process.EventEmitter" | "process.assert" | "process.binding" | "process.env.NODE_REPL_HISTORY_FILE" | "process.report.triggerReport" | "punycode" | "readline.codePointAt" | "readline.getStringWidth" | "readline.isFullWidthCodePoint" | "readline.stripVTControlCharacters" | "safe-buffer.Buffer()" | "new safe-buffer.Buffer()" | "safe-buffer.SlowBuffer" | "sys" | "timers.enroll" | "timers.unenroll" | "tls.CleartextStream" | "tls.CryptoStream" | "tls.SecurePair" | "tls.convertNPNProtocols" | "tls.createSecurePair" | "tls.parseCertString" | "tty.setRawMode" | "url.parse" | "url.resolve" | "util.debug" | "util.error" | "util.isArray" | "util.isBoolean" | "util.isBuffer" | "util.isDate" | "util.isError" | "util.isFunction" | "util.isNull" | "util.isNullOrUndefined" | "util.isNumber" | "util.isObject" | "util.isPrimitive" | "util.isRegExp" | "util.isString" | "util.isSymbol" | "util.isUndefined" | "util.log" | "util.print" | "util.pump" | "util.puts" | "util._extend" | "vm.runInDebugContext")[]
ignoreGlobalItems?: ("Buffer()" | "new Buffer()" | "COUNTER_NET_SERVER_CONNECTION" | "COUNTER_NET_SERVER_CONNECTION_CLOSE" | "COUNTER_HTTP_SERVER_REQUEST" | "COUNTER_HTTP_SERVER_RESPONSE" | "COUNTER_HTTP_CLIENT_REQUEST" | "COUNTER_HTTP_CLIENT_RESPONSE" | "GLOBAL" | "Intl.v8BreakIterator" | "require.extensions" | "root" | "process.EventEmitter" | "process.assert" | "process.binding" | "process.env.NODE_REPL_HISTORY_FILE" | "process.report.triggerReport")[]
ignoreIndirectDependencies?: boolean
}
type NodeNoDeprecatedApi = [_NodeNoDeprecatedApi0]
// ----- node/no-extraneous-import -----
interface _NodeNoExtraneousImport0 {
allowModules?: string[]
convertPath?: ({
[k: string]: [string, string]
} | [{
include: [string, ...(string)[]]
exclude?: string[]
replace: [string, string]
}, ...({
include: [string, ...(string)[]]
exclude?: string[]
replace: [string, string]
})[]])
resolvePaths?: string[]
}
type NodeNoExtraneousImport = [_NodeNoExtraneousImport0]
// ----- node/no-extraneous-require -----
interface _NodeNoExtraneousRequire0 {
allowModules?: string[]
convertPath?: ({
[k: string]: [string, string]
} | [{
include: [string, ...(string)[]]
exclude?: string[]
replace: [string, string]
}, ...({
include: [string, ...(string)[]]
exclude?: string[]
replace: [string, string]
})[]])
resolvePaths?: string[]
tryExtensions?: string[]
}
type NodeNoExtraneousRequire = [_NodeNoExtraneousRequire0]
// ----- node/no-hide-core-modules -----
interface _NodeNoHideCoreModules0 {
allow?: ("assert" | "buffer" | "child_process" | "cluster" | "console" | "constants" | "crypto" | "dgram" | "dns" | "events" | "fs" | "http" | "https" | "module" | "net" | "os" | "path" | "querystring" | "readline" | "repl" | "stream" | "string_decoder" | "timers" | "tls" | "tty" | "url" | "util" | "vm" | "zlib")[]
ignoreDirectDependencies?: boolean
ignoreIndirectDependencies?: boolean
}
type NodeNoHideCoreModules = [_NodeNoHideCoreModules0]
// ----- node/no-missing-import -----
interface _NodeNoMissingImport0 {
allowModules?: string[]
resolvePaths?: string[]
typescriptExtensionMap?: (unknown[][] | ("react" | "react-jsx" | "react-jsxdev" | "react-native" | "preserve"))
tsconfigPath?: string
}
type NodeNoMissingImport = [_NodeNoMissingImport0]
// ----- node/no-missing-require -----
interface _NodeNoMissingRequire0 {
allowModules?: string[]
tryExtensions?: string[]
resolvePaths?: string[]
typescriptExtensionMap?: (unknown[][] | ("react" | "react-jsx" | "react-jsxdev" | "react-native" | "preserve"))
tsconfigPath?: string
}
type NodeNoMissingRequire = [_NodeNoMissingRequire0]
// ----- node/no-mixed-requires -----
type _NodeNoMixedRequires0 = (boolean | {
grouping?: boolean
allowCall?: boolean
})
type NodeNoMixedRequires = [_NodeNoMixedRequires0]
// ----- node/no-restricted-import -----
type _NodeNoRestrictedImport0 = (string | {
name: (string | string[])
message?: string
})[]
type NodeNoRestrictedImport = [_NodeNoRestrictedImport0]
// ----- node/no-restricted-require -----
type _NodeNoRestrictedRequire0 = (string | {
name: (string | string[])
message?: string
})[]
type NodeNoRestrictedRequire = [_NodeNoRestrictedRequire0]
// ----- node/no-sync -----
interface _NodeNoSync0 {
allowAtRootLevel?: boolean
}
type NodeNoSync = [_NodeNoSync0]
// ----- node/no-unpublished-bin -----
interface _NodeNoUnpublishedBin0 {
convertPath?: ({
[k: string]: [string, string]
} | [{
include: [string, ...(string)[]]
exclude?: string[]
replace: [string, string]
}, ...({
include: [string, ...(string)[]]
exclude?: string[]
replace: [string, string]
})[]])
[k: string]: unknown
}
type NodeNoUnpublishedBin = [_NodeNoUnpublishedBin0]
// ----- node/no-unpublished-import -----
interface _NodeNoUnpublishedImport0 {
allowModules?: string[]
convertPath?: ({
[k: string]: [string, string]
} | [{
include: [string, ...(string)[]]
exclude?: string[]
replace: [string, string]
}, ...({
include: [string, ...(string)[]]
exclude?: string[]
replace: [string, string]
})[]])
resolvePaths?: string[]
ignoreTypeImport?: boolean
}
type NodeNoUnpublishedImport = [_NodeNoUnpublishedImport0]
// ----- node/no-unpublished-require -----
interface _NodeNoUnpublishedRequire0 {
allowModules?: string[]
convertPath?: ({
[k: string]: [string, string]
} | [{
include: [string, ...(string)[]]
exclude?: string[]
replace: [string, string]
}, ...({
include: [string, ...(string)[]]
exclude?: string[]
replace: [string, string]
})[]])
resolvePaths?: string[]
tryExtensions?: string[]
}
type NodeNoUnpublishedRequire = [_NodeNoUnpublishedRequire0]
// ----- node/no-unsupported-features -----
type _NodeNoUnsupportedFeatures0 = ((0.1 | 0.12 | 4 | 5 | 6 | 6.5 | 7 | 7.6 | 8 | 8.3 | 9 | 10) | string | {
version?: ((0.1 | 0.12 | 4 | 5 | 6 | 6.5 | 7 | 7.6 | 8 | 8.3 | 9 | 10) | string)
ignores?: ("syntax" | "defaultParameters" | "restParameters" | "spreadOperators" | "objectLiteralExtensions" | "objectPropertyShorthandOfGetSet" | "forOf" | "binaryNumberLiterals" | "octalNumberLiterals" | "templateStrings" | "regexpY" | "regexpU" | "destructuring" | "unicodeCodePointEscapes" | "new.target" | "const" | "let" | "blockScopedFunctions" | "arrowFunctions" | "generatorFunctions" | "classes" | "modules" | "exponentialOperators" | "asyncAwait" | "trailingCommasInFunctions" | "templateLiteralRevision" | "regexpS" | "regexpNamedCaptureGroups" | "regexpLookbehind" | "regexpUnicodeProperties" | "restProperties" | "spreadProperties" | "asyncGenerators" | "forAwaitOf" | "runtime" | "globalObjects" | "typedArrays" | "Int8Array" | "Uint8Array" | "Uint8ClampedArray" | "Int16Array" | "Uint16Array" | "Int32Array" | "Uint32Array" | "Float32Array" | "Float64Array" | "DataView" | "Map" | "Set" | "WeakMap" | "WeakSet" | "Proxy" | "Reflect" | "Promise" | "Symbol" | "SharedArrayBuffer" | "Atomics" | "staticMethods" | "Object.*" | "Object.assign" | "Object.is" | "Object.getOwnPropertySymbols" | "Object.setPrototypeOf" | "Object.values" | "Object.entries" | "Object.getOwnPropertyDescriptors" | "String.*" | "String.raw" | "String.fromCodePoint" | "Array.*" | "Array.from" | "Array.of" | "Number.*" | "Number.isFinite" | "Number.isInteger" | "Number.isSafeInteger" | "Number.isNaN" | "Number.EPSILON" | "Number.MIN_SAFE_INTEGER" | "Number.MAX_SAFE_INTEGER" | "Math.*" | "Math.clz32" | "Math.imul" | "Math.sign" | "Math.log10" | "Math.log2" | "Math.log1p" | "Math.expm1" | "Math.cosh" | "Math.sinh" | "Math.tanh" | "Math.acosh" | "Math.asinh" | "Math.atanh" | "Math.trunc" | "Math.fround" | "Math.cbrt" | "Math.hypot" | "Symbol.*" | "Symbol.hasInstance" | "Symbol.isConcatSpreadablec" | "Symbol.iterator" | "Symbol.species" | "Symbol.replace" | "Symbol.search" | "Symbol.split" | "Symbol.match" | "Symbol.toPrimitive" | "Symbol.toStringTag" | "Symbol.unscopables" | "Atomics.*" | "Atomics.add" | "Atomics.and" | "Atomics.compareExchange" | "Atomics.exchange" | "Atomics.wait" | "Atomics.wake" | "Atomics.isLockFree" | "Atomics.load" | "Atomics.or" | "Atomics.store" | "Atomics.sub" | "Atomics.xor" | "extends" | "extendsArray" | "extendsRegExp" | "extendsFunction" | "extendsPromise" | "extendsBoolean" | "extendsNumber" | "extendsString" | "extendsMap" | "extendsSet" | "extendsNull")[]
})
type NodeNoUnsupportedFeatures = [_NodeNoUnsupportedFeatures0]
// ----- node/no-unsupported-features/es-builtins -----
interface _NodeNoUnsupportedFeaturesEsBuiltins0 {
version?: string
ignores?: ("AggregateError" | "Array.from" | "Array.of" | "BigInt" | "FinalizationRegistry" | "Map" | "Math.acosh" | "Math.asinh" | "Math.atanh" | "Math.cbrt" | "Math.clz32" | "Math.cosh" | "Math.expm1" | "Math.fround" | "Math.hypot" | "Math.imul" | "Math.log10" | "Math.log1p" | "Math.log2" | "Math.sign" | "Math.sinh" | "Math.tanh" | "Math.trunc" | "Number.EPSILON" | "Number.isFinite" | "Number.isInteger" | "Number.isNaN" | "Number.isSafeInteger" | "Number.MAX_SAFE_INTEGER" | "Number.MIN_SAFE_INTEGER" | "Number.parseFloat" | "Number.parseInt" | "Object.assign" | "Object.fromEntries" | "Object.getOwnPropertySymbols" | "Object.is" | "Object.setPrototypeOf" | "Object.values" | "Object.entries" | "Object.getOwnPropertyDescriptors" | "Promise" | "Promise.allSettled" | "Promise.any" | "Proxy" | "Reflect" | "Set" | "String.fromCodePoint" | "String.raw" | "Symbol" | "Int8Array" | "Uint8Array" | "Uint8ClampedArray" | "Int16Array" | "Uint16Array" | "Int32Array" | "Uint32Array" | "BigInt64Array" | "BigUint64Array" | "Float32Array" | "Float64Array" | "DataView" | "WeakMap" | "WeakRef" | "WeakSet" | "Atomics" | "SharedArrayBuffer" | "globalThis")[]
}
type NodeNoUnsupportedFeaturesEsBuiltins = [_NodeNoUnsupportedFeaturesEsBuiltins0]
// ----- node/no-unsupported-features/es-syntax -----
interface _NodeNoUnsupportedFeaturesEsSyntax0 {
version?: string
ignores?: ("arrowFunctions" | "binaryNumericLiterals" | "blockScopedFunctions" | "blockScopedVariables" | "classes" | "computedProperties" | "defaultParameters" | "destructuring" | "forOfLoops" | "generators" | "modules" | "new.target" | "objectSuperProperties" | "octalNumericLiterals" | "propertyShorthands" | "regexpU" | "regexpY" | "restParameters" | "spreadElements" | "templateLiterals" | "unicodeCodePointEscapes" | "exponentialOperators" | "asyncFunctions" | "trailingCommasInFunctions" | "asyncIteration" | "malformedTemplateLiterals" | "regexpLookbehind" | "regexpNamedCaptureGroups" | "regexpS" | "regexpUnicodeProperties" | "restSpreadProperties" | "jsonSuperset" | "optionalCatchBinding" | "bigint" | "dynamicImport" | "optionalChaining" | "nullishCoalescingOperators" | "logicalAssignmentOperators" | "numericSeparators")[]
}
type NodeNoUnsupportedFeaturesEsSyntax = [_NodeNoUnsupportedFeaturesEsSyntax0]
// ----- node/no-unsupported-features/node-builtins -----
interface _NodeNoUnsupportedFeaturesNodeBuiltins0 {
version?: string
ignores?: ("queueMicrotask" | "require.resolve.paths" | "Buffer.alloc" | "Buffer.allocUnsafe" | "Buffer.allocUnsafeSlow" | "Buffer.from" | "TextDecoder" | "TextEncoder" | "URL" | "URLSearchParams" | "console.clear" | "console.count" | "console.countReset" | "console.debug" | "console.dirxml" | "console.group" | "console.groupCollapsed" | "console.groupEnd" | "console.table" | "console.markTimeline" | "console.profile" | "console.profileEnd" | "console.timeLog" | "console.timeStamp" | "console.timeline" | "console.timelineEnd" | "process.allowedNodeEnvironmentFlags" | "process.argv0" | "process.channel" | "process.cpuUsage" | "process.emitWarning" | "process.getegid" | "process.geteuid" | "process.hasUncaughtExceptionCaptureCallback" | "process.hrtime.bigint" | "process.ppid" | "process.release" | "process.report" | "process.resourceUsage" | "process.setegid" | "process.seteuid" | "process.setUncaughtExceptionCaptureCallback" | "process.stdout.getColorDepth" | "process.stdout.hasColor" | "process.stderr.getColorDepth" | "process.stderr.hasColor" | "assert.strict" | "assert.strict.doesNotReject" | "assert.strict.rejects" | "assert.deepStrictEqual" | "assert.doesNotReject" | "assert.notDeepStrictEqual" | "assert.rejects" | "assert.CallTracker" | "async_hooks" | "async_hooks.createHook" | "async_hooks.AsyncLocalStorage" | "buffer.Buffer.alloc" | "buffer.Buffer.allocUnsafe" | "buffer.Buffer.allocUnsafeSlow" | "buffer.Buffer.from" | "buffer.kMaxLength" | "buffer.transcode" | "buffer.constants" | "buffer.Blob" | "child_process.ChildProcess" | "crypto.Certificate.exportChallenge" | "crypto.Certificate.exportPublicKey" | "crypto.Certificate.verifySpkac" | "crypto.ECDH" | "crypto.KeyObject" | "crypto.createPrivateKey" | "crypto.createPublicKey" | "crypto.createSecretKey" | "crypto.constants" | "crypto.fips" | "crypto.generateKeyPair" | "crypto.generateKeyPairSync" | "crypto.getCurves" | "crypto.getFips" | "crypto.privateEncrypt" | "crypto.publicDecrypt" | "crypto.randomFillSync" | "crypto.randomFill" | "crypto.scrypt" | "crypto.scryptSync" | "crypto.setFips" | "crypto.sign" | "crypto.timingSafeEqual" | "crypto.verify" | "dns.Resolver" | "dns.resolvePtr" | "dns.promises" | "events.EventEmitter.once" | "events.once" | "fs.Dirent" | "fs.copyFile" | "fs.copyFileSync" | "fs.mkdtemp" | "fs.mkdtempSync" | "fs.realpath.native" | "fs.realpathSync.native" | "fs.promises" | "fs.writev" | "fs.writevSync" | "fs.readv" | "fs.readvSync" | "fs.lutimes" | "fs.lutimesSync" | "fs.opendir" | "fs.opendirSync" | "fs.rm" | "fs.rmSync" | "fs.read" | "fs.readSync" | "fs.Dir" | "fs.StatWatcher" | "fs/promises" | "http2" | "inspector" | "module.Module.builtinModules" | "module.Module.createRequireFromPath" | "module.Module.createRequire" | "module.Module.syncBuiltinESMExports" | "module.builtinModules" | "module.createRequireFromPath" | "module.createRequire" | "module.syncBuiltinESMExports" | "os.constants" | "os.constants.priority" | "os.getPriority" | "os.homedir" | "os.setPriority" | "os.userInfo" | "path.toNamespacedPath" | "perf_hooks" | "perf_hooks.monitorEventLoopDelay" | "stream.Readable.from" | "stream.finished" | "stream.pipeline" | "trace_events" | "url.URL" | "url.URLSearchParams" | "url.domainToASCII" | "url.domainToUnicode" | "util.callbackify" | "util.formatWithOptions" | "util.getSystemErrorName" | "util.inspect.custom" | "util.inspect.defaultOptions" | "util.inspect.replDefaults" | "util.isDeepStrictEqual" | "util.promisify" | "util.TextDecoder" | "util.TextEncoder" | "util.types" | "util.types.isBoxedPrimitive" | "v8" | "v8.DefaultDeserializer" | "v8.DefaultSerializer" | "v8.Deserializer" | "v8.Serializer" | "v8.cachedDataVersionTag" | "v8.deserialize" | "v8.getHeapCodeStatistics" | "v8.getHeapSnapshot" | "v8.getHeapSpaceStatistics" | "v8.serialize" | "v8.writeHeapSnapshot" | "vm.Module" | "vm.compileFunction" | "worker_threads")[]
}
type NodeNoUnsupportedFeaturesNodeBuiltins = [_NodeNoUnsupportedFeaturesNodeBuiltins0]
// ----- node/prefer-global/buffer -----
type _NodePreferGlobalBuffer0 = ("always" | "never")
type NodePreferGlobalBuffer = [_NodePreferGlobalBuffer0]
// ----- node/prefer-global/console -----
type _NodePreferGlobalConsole0 = ("always" | "never")
type NodePreferGlobalConsole = [_NodePreferGlobalConsole0]
// ----- node/prefer-global/process -----
type _NodePreferGlobalProcess0 = ("always" | "never")
type NodePreferGlobalProcess = [_NodePreferGlobalProcess0]
// ----- node/prefer-global/text-decoder -----
type _NodePreferGlobalTextDecoder0 = ("always" | "never")
type NodePreferGlobalTextDecoder = [_NodePreferGlobalTextDecoder0]
// ----- node/prefer-global/text-encoder -----
type _NodePreferGlobalTextEncoder0 = ("always" | "never")
type NodePreferGlobalTextEncoder = [_NodePreferGlobalTextEncoder0]
// ----- node/prefer-global/url -----
type _NodePreferGlobalUrl0 = ("always" | "never")
type NodePreferGlobalUrl = [_NodePreferGlobalUrl0]
// ----- node/prefer-global/url-search-params -----
type _NodePreferGlobalUrlSearchParams0 = ("always" | "never")
type NodePreferGlobalUrlSearchParams = [_NodePreferGlobalUrlSearchParams0]
// ----- node/shebang -----
interface _NodeShebang0 {
convertPath?: ({
[k: string]: [string, string]
} | [{
include: [string, ...(string)[]]
exclude?: string[]
replace: [string, string]
}, ...({
include: [string, ...(string)[]]
exclude?: string[]
replace: [string, string]
})[]])
}
type NodeShebang = [_NodeShebang0]"
`;
